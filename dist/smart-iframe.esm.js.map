{"version":3,"file":"smart-iframe.esm.js","sources":["../src/core/ResourceCache.js","../src/utils/htmlParser.js","../src/core/Renderer.js","../src/core/SmartIframe.js","../src/web-components/SmartIframeElement.js","../src/index.js"],"sourcesContent":["/**\n * 资源缓存层 - 解决重复请求问题的核心模块\n */\nclass ResourceCache {\n  static cache = new Map();\n  static pendingRequests = new Map();\n  static maxCacheSize = 100; // 最大缓存数量\n  static maxAge = 30 * 60 * 1000; // 30分钟过期时间\n\n  /**\n   * 带缓存的资源获取\n   * @param {string} url - 资源URL\n   * @param {Object} options - 请求选项\n   * @returns {Promise<Object>} 缓存的资源对象\n   */\n  static async fetchWithCache(url, options = {}) {\n    const normalizedUrl = this.normalizeUrl(url);\n    \n    // 检查缓存\n    if (this.cache.has(normalizedUrl)) {\n      const cached = this.cache.get(normalizedUrl);\n      \n      // 检查是否过期\n      if (Date.now() - cached.timestamp < this.maxAge) {\n        console.log(`[SmartIframe] 使用缓存: ${normalizedUrl}`);\n        return cached;\n      } else {\n        // 删除过期缓存\n        this.cache.delete(normalizedUrl);\n      }\n    }\n\n    // 检查是否有正在进行的请求\n    if (this.pendingRequests.has(normalizedUrl)) {\n      console.log(`[SmartIframe] 等待正在进行的请求: ${normalizedUrl}`);\n      return await this.pendingRequests.get(normalizedUrl);\n    }\n\n    // 发起新请求\n    console.log(`[SmartIframe] 发起新请求: ${normalizedUrl}`);\n    const requestPromise = this.performRequest(normalizedUrl, options);\n    this.pendingRequests.set(normalizedUrl, requestPromise);\n\n    try {\n      const result = await requestPromise;\n      this.pendingRequests.delete(normalizedUrl);\n      \n      // 存入缓存\n      this.addToCache(normalizedUrl, result);\n      return result;\n    } catch (error) {\n      this.pendingRequests.delete(normalizedUrl);\n      throw error;\n    }\n  }\n\n  /**\n   * 执行实际的HTTP请求\n   * @param {string} url - 请求URL\n   * @param {Object} options - 请求选项\n   * @returns {Promise<Object>} 请求结果\n   */\n  static async performRequest(url, options) {\n    try {\n      const response = await fetch(url, {\n        mode: 'cors',\n        cache: 'default',\n        ...options\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const contentType = response.headers.get('content-type') || '';\n      let content;\n\n      if (contentType.includes('text/') || contentType.includes('application/javascript') || contentType.includes('application/json')) {\n        content = await response.text();\n      } else {\n        // 对于二进制资源，转换为blob URL\n        const blob = await response.blob();\n        content = URL.createObjectURL(blob);\n      }\n\n      return {\n        content,\n        contentType,\n        url,\n        timestamp: Date.now(),\n        size: content.length || 0\n      };\n    } catch (error) {\n      console.error(`[SmartIframe] 请求失败: ${url}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * URL标准化处理\n   * @param {string} url - 原始URL\n   * @returns {string} 标准化后的URL\n   */\n  static normalizeUrl(url) {\n    try {\n      const urlObj = new URL(url, window.location.href);\n      // 移除fragment，保留query参数\n      urlObj.hash = '';\n      return urlObj.toString();\n    } catch (error) {\n      console.warn(`[SmartIframe] URL标准化失败: ${url}`, error);\n      return url;\n    }\n  }\n\n  /**\n   * 添加到缓存\n   * @param {string} url - URL\n   * @param {Object} data - 缓存数据\n   */\n  static addToCache(url, data) {\n    // 检查缓存大小限制\n    if (this.cache.size >= this.maxCacheSize) {\n      // 删除最旧的缓存项\n      const oldestKey = this.cache.keys().next().value;\n      this.cache.delete(oldestKey);\n      console.log(`[SmartIframe] 删除最旧缓存: ${oldestKey}`);\n    }\n\n    this.cache.set(url, data);\n    console.log(`[SmartIframe] 缓存已保存: ${url} (${data.size} bytes)`);\n  }\n\n  /**\n   * 清除缓存\n   * @param {string} url - 可选的特定URL，不传则清除全部\n   */\n  static clearCache(url = null) {\n    if (url) {\n      const normalizedUrl = this.normalizeUrl(url);\n      this.cache.delete(normalizedUrl);\n      console.log(`[SmartIframe] 已清除缓存: ${normalizedUrl}`);\n    } else {\n      this.cache.clear();\n      console.log('[SmartIframe] 已清除全部缓存');\n    }\n  }\n\n  /**\n   * 获取缓存统计信息\n   * @returns {Object} 缓存统计\n   */\n  static getCacheStats() {\n    const totalSize = Array.from(this.cache.values())\n      .reduce((sum, item) => sum + (item.size || 0), 0);\n    \n    return {\n      count: this.cache.size,\n      totalSize,\n      maxSize: this.maxCacheSize,\n      pendingRequests: this.pendingRequests.size\n    };\n  }\n\n  /**\n   * 预加载资源列表\n   * @param {Array<string>} urls - 要预加载的URL列表\n   * @returns {Promise<Array>} 预加载结果\n   */\n  static async preloadResources(urls) {\n    console.log(`[SmartIframe] 开始预加载 ${urls.length} 个资源`);\n    const promises = urls.map(url => \n      this.fetchWithCache(url).catch(error => {\n        console.warn(`[SmartIframe] 预加载失败: ${url}`, error);\n        return null;\n      })\n    );\n    \n    const results = await Promise.all(promises);\n    const successCount = results.filter(r => r !== null).length;\n    console.log(`[SmartIframe] 预加载完成: ${successCount}/${urls.length} 成功`);\n    \n    return results;\n  }\n}\n\nexport default ResourceCache; ","/**\n * HTML解析器 - 解析HTML并提取所有资源引用\n */\nclass HtmlParser {\n  /**\n   * 解析HTML内容，提取所有资源引用\n   * @param {string} html - HTML内容\n   * @param {string} baseUrl - 基础URL，用于解析相对路径\n   * @returns {Object} 解析结果\n   */\n  static parseHTML(html, baseUrl) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    \n    const resources = {\n      stylesheets: [],\n      scripts: [],\n      images: [],\n      links: [],\n      other: []\n    };\n\n    // 提取CSS资源\n    this.extractStylesheets(doc, resources, baseUrl);\n    \n    // 提取JavaScript资源\n    this.extractScripts(doc, resources, baseUrl);\n    \n    // 提取图片资源\n    this.extractImages(doc, resources, baseUrl);\n    \n    // 提取其他链接资源\n    this.extractOtherLinks(doc, resources, baseUrl);\n\n    // 处理内联样式中的URL\n    this.extractInlineStyleUrls(doc, resources, baseUrl);\n\n    return {\n      document: doc,\n      resources,\n      allUrls: this.getAllUrls(resources)\n    };\n  }\n\n  /**\n   * 提取CSS样式表\n   */\n  static extractStylesheets(doc, resources, baseUrl) {\n    const links = doc.querySelectorAll('link[rel=\"stylesheet\"], link[rel=\"preload\"][as=\"style\"]');\n    \n    links.forEach(link => {\n      const href = link.getAttribute('href');\n      if (href) {\n        const absoluteUrl = this.resolveUrl(href, baseUrl);\n        resources.stylesheets.push({\n          element: link,\n          originalUrl: href,\n          absoluteUrl,\n          type: 'stylesheet'\n        });\n      }\n    });\n\n    // 提取style标签中的@import\n    const styleTags = doc.querySelectorAll('style');\n    styleTags.forEach(style => {\n      const content = style.textContent;\n      const importMatches = content.match(/@import\\s+(?:url\\()?[\"']?([^\"')]+)[\"']?\\)?[^;]*;/g);\n      \n      if (importMatches) {\n        importMatches.forEach(match => {\n          const urlMatch = match.match(/[\"']?([^\"')]+)[\"']?/);\n          if (urlMatch && urlMatch[1]) {\n            const absoluteUrl = this.resolveUrl(urlMatch[1], baseUrl);\n            resources.stylesheets.push({\n              element: style,\n              originalUrl: urlMatch[1],\n              absoluteUrl,\n              type: 'import',\n              parentStyle: style\n            });\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * 提取JavaScript脚本\n   */\n  static extractScripts(doc, resources, baseUrl) {\n    const scripts = doc.querySelectorAll('script[src]');\n    \n    scripts.forEach(script => {\n      const src = script.getAttribute('src');\n      if (src) {\n        const absoluteUrl = this.resolveUrl(src, baseUrl);\n        resources.scripts.push({\n          element: script,\n          originalUrl: src,\n          absoluteUrl,\n          type: 'script',\n          async: script.hasAttribute('async'),\n          defer: script.hasAttribute('defer'),\n          module: script.type === 'module'\n        });\n      }\n    });\n  }\n\n  /**\n   * 提取图片资源\n   */\n  static extractImages(doc, resources, baseUrl) {\n    const images = doc.querySelectorAll('img[src], img[data-src]');\n    \n    images.forEach(img => {\n      const src = img.getAttribute('src') || img.getAttribute('data-src');\n      if (src) {\n        const absoluteUrl = this.resolveUrl(src, baseUrl);\n        resources.images.push({\n          element: img,\n          originalUrl: src,\n          absoluteUrl,\n          type: 'image'\n        });\n      }\n\n      // 处理srcset\n      const srcset = img.getAttribute('srcset');\n      if (srcset) {\n        const srcsetUrls = this.parseSrcset(srcset, baseUrl);\n        srcsetUrls.forEach(url => {\n          resources.images.push({\n            element: img,\n            originalUrl: url.originalUrl,\n            absoluteUrl: url.absoluteUrl,\n            type: 'image-srcset'\n          });\n        });\n      }\n    });\n\n    // 处理背景图片\n    const elementsWithBg = doc.querySelectorAll('[style*=\"background\"]');\n    elementsWithBg.forEach(el => {\n      const style = el.getAttribute('style');\n      const bgUrls = this.extractBackgroundUrls(style, baseUrl);\n      bgUrls.forEach(url => {\n        resources.images.push({\n          element: el,\n          originalUrl: url.originalUrl,\n          absoluteUrl: url.absoluteUrl,\n          type: 'background-image'\n        });\n      });\n    });\n  }\n\n  /**\n   * 提取其他链接资源\n   */\n  static extractOtherLinks(doc, resources, baseUrl) {\n    const links = doc.querySelectorAll('link:not([rel=\"stylesheet\"]):not([rel=\"preload\"][as=\"style\"])');\n    \n    links.forEach(link => {\n      const href = link.getAttribute('href');\n      if (href) {\n        const absoluteUrl = this.resolveUrl(href, baseUrl);\n        const rel = link.getAttribute('rel') || 'unknown';\n        \n        resources.links.push({\n          element: link,\n          originalUrl: href,\n          absoluteUrl,\n          type: 'link',\n          rel\n        });\n      }\n    });\n\n    // 处理其他可能的资源引用\n    const otherElements = doc.querySelectorAll('source[src], track[src], embed[src], object[data]');\n    otherElements.forEach(el => {\n      const src = el.getAttribute('src') || el.getAttribute('data');\n      if (src) {\n        const absoluteUrl = this.resolveUrl(src, baseUrl);\n        resources.other.push({\n          element: el,\n          originalUrl: src,\n          absoluteUrl,\n          type: el.tagName.toLowerCase()\n        });\n      }\n    });\n  }\n\n  /**\n   * 提取内联样式中的URL\n   */\n  static extractInlineStyleUrls(doc, resources, baseUrl) {\n    const elementsWithStyle = doc.querySelectorAll('[style]');\n    \n    elementsWithStyle.forEach(el => {\n      const style = el.getAttribute('style');\n      const urls = this.extractUrlsFromCSS(style, baseUrl);\n      \n      urls.forEach(url => {\n        resources.other.push({\n          element: el,\n          originalUrl: url.originalUrl,\n          absoluteUrl: url.absoluteUrl,\n          type: 'inline-style'\n        });\n      });\n    });\n  }\n\n  /**\n   * 从CSS内容中提取URL\n   */\n  static extractUrlsFromCSS(cssContent, baseUrl) {\n    const urls = [];\n    const urlRegex = /url\\(\\s*[\"']?([^\"')]+)[\"']?\\s*\\)/g;\n    let match;\n\n    while ((match = urlRegex.exec(cssContent)) !== null) {\n      const originalUrl = match[1];\n      const absoluteUrl = this.resolveUrl(originalUrl, baseUrl);\n      urls.push({ originalUrl, absoluteUrl });\n    }\n\n    return urls;\n  }\n\n  /**\n   * 提取背景图片URL\n   */\n  static extractBackgroundUrls(styleContent, baseUrl) {\n    return this.extractUrlsFromCSS(styleContent, baseUrl);\n  }\n\n  /**\n   * 解析srcset属性\n   */\n  static parseSrcset(srcset, baseUrl) {\n    const urls = [];\n    const entries = srcset.split(',');\n    \n    entries.forEach(entry => {\n      const trimmed = entry.trim();\n      const parts = trimmed.split(/\\s+/);\n      if (parts.length > 0) {\n        const originalUrl = parts[0];\n        const absoluteUrl = this.resolveUrl(originalUrl, baseUrl);\n        urls.push({ originalUrl, absoluteUrl });\n      }\n    });\n\n    return urls;\n  }\n\n  /**\n   * 解析相对URL为绝对URL\n   */\n  static resolveUrl(url, baseUrl) {\n    try {\n      // 如果已经是绝对URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('//')) {\n        return url.startsWith('//') ? `https:${url}` : url;\n      }\n\n      // 如果是data URL或其他特殊协议，直接返回\n      if (url.startsWith('data:') || url.startsWith('blob:') || url.startsWith('javascript:')) {\n        return url;\n      }\n\n      // 解析相对URL\n      const base = new URL(baseUrl);\n      const resolved = new URL(url, base);\n      return resolved.toString();\n    } catch (error) {\n      console.warn(`[SmartIframe] URL解析失败: ${url} (base: ${baseUrl})`, error);\n      return url;\n    }\n  }\n\n  /**\n   * 获取所有资源URL列表\n   */\n  static getAllUrls(resources) {\n    const allUrls = [];\n    \n    Object.values(resources).forEach(resourceList => {\n      resourceList.forEach(resource => {\n        if (resource.absoluteUrl && !allUrls.includes(resource.absoluteUrl)) {\n          allUrls.push(resource.absoluteUrl);\n        }\n      });\n    });\n\n    return allUrls;\n  }\n\n  /**\n   * 重写HTML中的资源引用\n   * @param {Document} doc - DOM文档\n   * @param {Object} resourceMap - 资源映射表 {originalUrl: newUrl}\n   * @returns {string} 重写后的HTML\n   */\n  static rewriteResourceReferences(doc, resourceMap) {\n    // 重写link标签\n    doc.querySelectorAll('link[href]').forEach(link => {\n      const href = link.getAttribute('href');\n      const absoluteUrl = this.resolveUrl(href, window.location.href);\n      if (resourceMap[absoluteUrl]) {\n        link.setAttribute('href', resourceMap[absoluteUrl]);\n      }\n    });\n\n    // 重写script标签\n    doc.querySelectorAll('script[src]').forEach(script => {\n      const src = script.getAttribute('src');\n      const absoluteUrl = this.resolveUrl(src, window.location.href);\n      if (resourceMap[absoluteUrl]) {\n        script.setAttribute('src', resourceMap[absoluteUrl]);\n      }\n    });\n\n    // 重写img标签\n    doc.querySelectorAll('img[src]').forEach(img => {\n      const src = img.getAttribute('src');\n      const absoluteUrl = this.resolveUrl(src, window.location.href);\n      if (resourceMap[absoluteUrl]) {\n        img.setAttribute('src', resourceMap[absoluteUrl]);\n      }\n    });\n\n    // 重写style标签中的@import和url()\n    doc.querySelectorAll('style').forEach(style => {\n      let content = style.textContent;\n      \n      // 替换所有URL引用\n      content = content.replace(/url\\(\\s*[\"']?([^\"')]+)[\"']?\\s*\\)/g, (match, url) => {\n        const absoluteUrl = this.resolveUrl(url, window.location.href);\n        const newUrl = resourceMap[absoluteUrl] || url;\n        return match.replace(url, newUrl);\n      });\n\n      style.textContent = content;\n    });\n\n    return doc.documentElement.outerHTML;\n  }\n}\n\nexport default HtmlParser; ","import ResourceCache from './ResourceCache.js';\nimport HtmlParser from '../utils/htmlParser.js';\n\n/**\n * 渲染引擎 - 负责在Shadow DOM中渲染完整网页\n */\nclass Renderer {\n  constructor(container, options = {}) {\n    this.container = container;\n    this.options = {\n      sandbox: true,\n      loadImages: true,\n      loadScripts: true,\n      loadStyles: true,\n      ...options\n    };\n    \n    this.shadowRoot = null;\n    this.baseUrl = '';\n    this.resourceMap = new Map();\n    this.isRendered = false;\n  }\n\n  /**\n   * 渲染URL指定的网页\n   * @param {string} url - 要渲染的网页URL\n   * @returns {Promise<void>}\n   */\n  async renderUrl(url) {\n    try {\n      console.log(`[SmartIframe] 开始渲染: ${url}`);\n      this.baseUrl = url;\n\n      // 1. 获取HTML内容\n      const htmlResource = await ResourceCache.fetchWithCache(url);\n      \n      // 2. 解析HTML并提取资源\n      const parsed = HtmlParser.parseHTML(htmlResource.content, url);\n      \n      // 3. 预加载所有资源\n      if (parsed.allUrls.length > 0) {\n        await this.preloadResources(parsed.allUrls);\n      }\n\n      // 4. 创建Shadow DOM\n      this.createShadowRoot();\n\n      // 5. 处理CSS样式\n      await this.processStyles(parsed.resources.stylesheets);\n\n      // 6. 渲染HTML结构\n      this.renderHTML(parsed.document);\n\n      // 7. 处理JavaScript（如果启用）\n      if (this.options.loadScripts) {\n        await this.processScripts(parsed.resources.scripts);\n      }\n\n      // 8. 处理图片资源\n      if (this.options.loadImages) {\n        this.processImages(parsed.resources.images);\n      }\n\n      this.isRendered = true;\n      console.log(`[SmartIframe] 渲染完成: ${url}`);\n      \n      // 触发渲染完成事件\n      this.dispatchEvent('rendered', { url, resources: parsed.resources });\n\n    } catch (error) {\n      console.error(`[SmartIframe] 渲染失败: ${url}`, error);\n      this.dispatchEvent('error', { url, error });\n      throw error;\n    }\n  }\n\n  /**\n   * 创建Shadow DOM\n   */\n  createShadowRoot() {\n    if (this.shadowRoot) {\n      return;\n    }\n\n    // 检查容器是否已经有Shadow DOM\n    if (this.container.shadowRoot) {\n      this.shadowRoot = this.container.shadowRoot;\n      // 清空现有内容\n      this.shadowRoot.innerHTML = '';\n    } else {\n      this.shadowRoot = this.container.attachShadow({ \n        mode: 'closed',\n        delegatesFocus: false \n      });\n    }\n\n    // 添加基础样式重置\n    const resetStyle = document.createElement('style');\n    resetStyle.textContent = `\n      :host {\n        display: block;\n        width: 100%;\n        height: 100%;\n        overflow: auto;\n      }\n      \n      html, body {\n        margin: 0;\n        padding: 0;\n        width: 100%;\n        height: 100%;\n      }\n    `;\n    \n    this.shadowRoot.appendChild(resetStyle);\n  }\n\n  /**\n   * 预加载资源\n   * @param {Array<string>} urls - 资源URL列表\n   */\n  async preloadResources(urls) {\n    const filteredUrls = urls.filter(url => {\n      // 过滤掉不需要预加载的资源\n      return !url.startsWith('data:') && \n             !url.startsWith('blob:') && \n             !url.startsWith('javascript:');\n    });\n\n    if (filteredUrls.length > 0) {\n      await ResourceCache.preloadResources(filteredUrls);\n    }\n  }\n\n  /**\n   * 处理CSS样式\n   * @param {Array} stylesheets - CSS资源列表\n   */\n  async processStyles(stylesheets) {\n    if (!this.options.loadStyles) {\n      return;\n    }\n\n    for (const stylesheet of stylesheets) {\n      try {\n        if (stylesheet.type === 'stylesheet') {\n          const cssResource = await ResourceCache.fetchWithCache(stylesheet.absoluteUrl);\n          const processedCSS = await this.processCSSContent(cssResource.content, stylesheet.absoluteUrl);\n          \n          const style = document.createElement('style');\n          style.textContent = processedCSS;\n          this.shadowRoot.appendChild(style);\n          \n        } else if (stylesheet.type === 'import') {\n          // 处理@import\n          const cssResource = await ResourceCache.fetchWithCache(stylesheet.absoluteUrl);\n          const processedCSS = await this.processCSSContent(cssResource.content, stylesheet.absoluteUrl);\n          \n          // 替换原来的@import\n          const parentStyle = stylesheet.parentStyle;\n          if (parentStyle) {\n            let content = parentStyle.textContent;\n            content = content.replace(\n              new RegExp(`@import\\\\s+(?:url\\\\()?[\"']?${stylesheet.originalUrl.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}[\"']?\\\\)?[^;]*;`),\n              processedCSS\n            );\n            parentStyle.textContent = content;\n          }\n        }\n      } catch (error) {\n        console.warn(`[SmartIframe] CSS加载失败: ${stylesheet.absoluteUrl}`, error);\n      }\n    }\n  }\n\n  /**\n   * 处理CSS内容，解析其中的url()引用\n   * @param {string} cssContent - CSS内容\n   * @param {string} baseUrl - CSS文件的基础URL\n   * @returns {Promise<string>} 处理后的CSS内容\n   */\n  async processCSSContent(cssContent, baseUrl) {\n    // 提取CSS中的所有URL引用\n    const urlRegex = /url\\(\\s*[\"']?([^\"')]+)[\"']?\\s*\\)/g;\n    const urls = [];\n    let match;\n\n    while ((match = urlRegex.exec(cssContent)) !== null) {\n      const url = match[1];\n      if (!url.startsWith('data:') && !url.startsWith('blob:')) {\n        const absoluteUrl = HtmlParser.resolveUrl(url, baseUrl);\n        urls.push({ originalUrl: url, absoluteUrl });\n      }\n    }\n\n    // 预加载这些资源\n    if (urls.length > 0) {\n      const urlList = urls.map(u => u.absoluteUrl);\n      await ResourceCache.preloadResources(urlList);\n    }\n\n    // 替换URL引用为缓存的blob URL\n    let processedCSS = cssContent;\n    for (const urlInfo of urls) {\n      try {\n        const resource = await ResourceCache.fetchWithCache(urlInfo.absoluteUrl);\n        if (resource && resource.content) {\n          // 如果是blob URL，直接使用\n          const newUrl = resource.content.startsWith('blob:') ? resource.content : `data:${resource.contentType};base64,${btoa(resource.content)}`;\n          processedCSS = processedCSS.replace(\n            new RegExp(`url\\\\(\\\\s*[\"']?${urlInfo.originalUrl.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}[\"']?\\\\s*\\\\)`, 'g'),\n            `url(${newUrl})`\n          );\n        }\n      } catch (error) {\n        console.warn(`[SmartIframe] CSS资源处理失败: ${urlInfo.absoluteUrl}`, error);\n      }\n    }\n\n    return processedCSS;\n  }\n\n  /**\n   * 渲染HTML结构\n   * @param {Document} doc - 解析后的文档\n   */\n  renderHTML(doc) {\n    // 克隆body内容到shadow root\n    const body = doc.body;\n    if (body) {\n      // 创建一个容器div\n      const container = document.createElement('div');\n      container.innerHTML = body.innerHTML;\n      \n      // 处理所有图片的src属性\n      this.processImageElements(container);\n      \n      this.shadowRoot.appendChild(container);\n    }\n  }\n\n  /**\n   * 处理图片元素\n   * @param {Element} container - 容器元素\n   */\n  processImageElements(container) {\n    const images = container.querySelectorAll('img');\n    \n    images.forEach(async (img) => {\n      const src = img.getAttribute('src');\n      if (src && !src.startsWith('data:') && !src.startsWith('blob:')) {\n        try {\n          const absoluteUrl = HtmlParser.resolveUrl(src, this.baseUrl);\n          const resource = await ResourceCache.fetchWithCache(absoluteUrl);\n          \n          if (resource && resource.content) {\n            if (resource.content.startsWith('blob:')) {\n              img.src = resource.content;\n            } else {\n              // 转换为data URL\n              img.src = `data:${resource.contentType};base64,${btoa(resource.content)}`;\n            }\n          }\n        } catch (error) {\n          console.warn(`[SmartIframe] 图片加载失败: ${src}`, error);\n        }\n      }\n    });\n  }\n\n  /**\n   * 处理JavaScript脚本\n   * @param {Array} scripts - 脚本资源列表\n   */\n  async processScripts(scripts) {\n    if (!this.options.sandbox) {\n      console.warn('[SmartIframe] 脚本执行需要沙箱环境，跳过JavaScript处理');\n      return;\n    }\n\n    for (const script of scripts) {\n      try {\n        const jsResource = await ResourceCache.fetchWithCache(script.absoluteUrl);\n        \n        // 在沙箱环境中执行脚本\n        this.executeScriptInSandbox(jsResource.content, script.absoluteUrl);\n        \n      } catch (error) {\n        console.warn(`[SmartIframe] 脚本加载失败: ${script.absoluteUrl}`, error);\n      }\n    }\n  }\n\n  /**\n   * 在沙箱中执行脚本\n   * @param {string} scriptContent - 脚本内容\n   * @param {string} scriptUrl - 脚本URL\n   */\n  executeScriptInSandbox(scriptContent, scriptUrl) {\n    try {\n      // 创建一个受限的执行环境\n      const sandbox = {\n        console,\n        setTimeout,\n        setInterval,\n        clearTimeout,\n        clearInterval,\n        document: this.shadowRoot,\n        window: new Proxy({}, {\n          get: (target, prop) => {\n            // 只允许访问安全的属性\n            const allowedProps = ['console', 'setTimeout', 'setInterval', 'clearTimeout', 'clearInterval'];\n            if (allowedProps.includes(prop)) {\n              return sandbox[prop];\n            }\n            return undefined;\n          }\n        })\n      };\n\n      // 使用Function构造器创建沙箱环境\n      const func = new Function('sandbox', `\n        with(sandbox) {\n          ${scriptContent}\n        }\n      `);\n\n      func(sandbox);\n      \n    } catch (error) {\n      console.error(`[SmartIframe] 脚本执行失败: ${scriptUrl}`, error);\n    }\n  }\n\n  /**\n   * 处理图片资源\n   * @param {Array} images - 图片资源列表\n   */\n  processImages(images) {\n    // 图片处理已经在renderHTML中进行了\n    console.log(`[SmartIframe] 处理了 ${images.length} 个图片资源`);\n  }\n\n  /**\n   * 触发自定义事件\n   * @param {string} eventName - 事件名称\n   * @param {Object} detail - 事件详情\n   */\n  dispatchEvent(eventName, detail = {}) {\n    const event = new CustomEvent(`smartiframe:${eventName}`, {\n      detail,\n      bubbles: true,\n      cancelable: true\n    });\n    \n    this.container.dispatchEvent(event);\n  }\n\n  /**\n   * 销毁渲染器\n   */\n  destroy() {\n    if (this.shadowRoot) {\n      this.shadowRoot.innerHTML = '';\n    }\n    \n    this.resourceMap.clear();\n    this.isRendered = false;\n    \n    console.log('[SmartIframe] 渲染器已销毁');\n  }\n\n  /**\n   * 获取渲染统计信息\n   * @returns {Object} 统计信息\n   */\n  getStats() {\n    return {\n      isRendered: this.isRendered,\n      baseUrl: this.baseUrl,\n      resourceCount: this.resourceMap.size,\n      cacheStats: ResourceCache.getCacheStats()\n    };\n  }\n}\n\nexport default Renderer; ","import Renderer from './Renderer.js';\nimport ResourceCache from './ResourceCache.js';\n\n/**\n * SmartIframe - 智能iframe替代方案的核心组件\n */\nclass SmartIframe {\n  constructor(container, options = {}) {\n    this.container = this.resolveContainer(container);\n    this.options = {\n      width: '100%',\n      height: '400px',\n      sandbox: true,\n      loadImages: true,\n      loadScripts: false, // 默认关闭脚本执行，提高安全性\n      loadStyles: true,\n      cache: true,\n      ...options\n    };\n\n    this.src = '';\n    this.renderer = null;\n    this.isLoading = false;\n    this.isLoaded = false;\n    \n    this.init();\n  }\n\n  /**\n   * 解析容器元素\n   * @param {string|Element} container - 容器选择器或元素\n   * @returns {Element} 容器元素\n   */\n  resolveContainer(container) {\n    if (typeof container === 'string') {\n      const element = document.querySelector(container);\n      if (!element) {\n        throw new Error(`[SmartIframe] 找不到容器元素: ${container}`);\n      }\n      return element;\n    } else if (container instanceof Element) {\n      return container;\n    } else {\n      throw new Error('[SmartIframe] 无效的容器参数');\n    }\n  }\n\n  /**\n   * 初始化组件\n   */\n  init() {\n    this.setupContainer();\n    this.setupEventListeners();\n    this.renderer = new Renderer(this.container, this.options);\n  }\n\n  /**\n   * 设置容器样式\n   */\n  setupContainer() {\n    // 设置容器基础样式\n    Object.assign(this.container.style, {\n      width: this.options.width,\n      height: this.options.height,\n      border: 'none',\n      overflow: 'hidden',\n      display: 'block'\n    });\n\n    // 添加SmartIframe标识\n    this.container.setAttribute('data-smart-iframe', 'true');\n    this.container.classList.add('smart-iframe-container');\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  setupEventListeners() {\n    // 监听渲染事件\n    this.container.addEventListener('smartiframe:rendered', (e) => {\n      this.isLoading = false;\n      this.isLoaded = true;\n      this.dispatchEvent('load', e.detail);\n    });\n\n    // 监听错误事件\n    this.container.addEventListener('smartiframe:error', (e) => {\n      this.isLoading = false;\n      this.isLoaded = false;\n      this.dispatchEvent('error', e.detail);\n    });\n  }\n\n  /**\n   * 加载指定URL的内容\n   * @param {string} url - 要加载的URL\n   * @returns {Promise<void>}\n   */\n  async load(url) {\n    if (!url) {\n      throw new Error('[SmartIframe] URL不能为空');\n    }\n\n    if (this.isLoading) {\n      console.warn('[SmartIframe] 正在加载中，忽略新的加载请求');\n      return;\n    }\n\n    try {\n      this.isLoading = true;\n      this.isLoaded = false;\n      this.src = url;\n\n      // 显示加载状态\n      this.showLoadingState();\n\n      // 使用渲染器加载内容\n      await this.renderer.renderUrl(url);\n\n      // 隐藏加载状态\n      this.hideLoadingState();\n\n    } catch (error) {\n      this.hideLoadingState();\n      this.showErrorState(error);\n      throw error;\n    }\n  }\n\n  /**\n   * 显示加载状态\n   */\n  showLoadingState() {\n    this.container.innerHTML = `\n      <div class=\"smart-iframe-loading\" style=\"\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        font-family: Arial, sans-serif;\n        color: #666;\n        background: #f5f5f5;\n      \">\n        <div style=\"text-align: center;\">\n          <div style=\"\n            width: 40px;\n            height: 40px;\n            border: 3px solid #e0e0e0;\n            border-top: 3px solid #007bff;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            margin: 0 auto 10px;\n          \"></div>\n          <div>正在加载...</div>\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    `;\n  }\n\n  /**\n   * 隐藏加载状态\n   */\n  hideLoadingState() {\n    const loadingElement = this.container.querySelector('.smart-iframe-loading');\n    if (loadingElement) {\n      loadingElement.remove();\n    }\n  }\n\n  /**\n   * 显示错误状态\n   * @param {Error} error - 错误对象\n   */\n  showErrorState(error) {\n    this.container.innerHTML = `\n      <div class=\"smart-iframe-error\" style=\"\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        font-family: Arial, sans-serif;\n        background: #fff;\n        border: 1px solid #ddd;\n      \">\n        <div style=\"text-align: center; color: #666; padding: 20px;\">\n          <div style=\"font-size: 48px; margin-bottom: 10px;\">⚠️</div>\n          <div style=\"font-size: 16px; margin-bottom: 10px;\">加载失败</div>\n          <div style=\"font-size: 14px; color: #999;\">${error.message}</div>\n          <button onclick=\"this.closest('.smart-iframe-container').smartIframe.reload()\" \n                  style=\"\n                    margin-top: 15px;\n                    padding: 8px 16px;\n                    background: #007bff;\n                    color: white;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                  \">\n            重新加载\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * 重新加载当前URL\n   * @returns {Promise<void>}\n   */\n  async reload() {\n    if (this.src) {\n      // 清除该URL的缓存\n      if (this.options.cache) {\n        ResourceCache.clearCache(this.src);\n      }\n      await this.load(this.src);\n    }\n  }\n\n  /**\n   * 设置src属性（类似iframe的src）\n   * @param {string} url - URL\n   */\n  set src(url) {\n    this._src = url;\n    if (url) {\n      this.load(url).catch(error => {\n        console.error('[SmartIframe] 自动加载失败:', error);\n      });\n    }\n  }\n\n  /**\n   * 获取src属性\n   * @returns {string} 当前的URL\n   */\n  get src() {\n    return this._src || '';\n  }\n\n  /**\n   * 设置宽度\n   * @param {string} width - 宽度值\n   */\n  set width(width) {\n    this.options.width = width;\n    this.container.style.width = width;\n  }\n\n  /**\n   * 获取宽度\n   * @returns {string} 当前宽度\n   */\n  get width() {\n    return this.options.width;\n  }\n\n  /**\n   * 设置高度\n   * @param {string} height - 高度值\n   */\n  set height(height) {\n    this.options.height = height;\n    this.container.style.height = height;\n  }\n\n  /**\n   * 获取高度\n   * @returns {string} 当前高度\n   */\n  get height() {\n    return this.options.height;\n  }\n\n  /**\n   * 获取加载状态\n   * @returns {boolean} 是否正在加载\n   */\n  get loading() {\n    return this.isLoading;\n  }\n\n  /**\n   * 获取加载完成状态\n   * @returns {boolean} 是否已加载完成\n   */\n  get loaded() {\n    return this.isLoaded;\n  }\n\n  /**\n   * 触发自定义事件\n   * @param {string} eventName - 事件名称\n   * @param {Object} detail - 事件详情\n   */\n  dispatchEvent(eventName, detail = {}) {\n    const event = new CustomEvent(eventName, {\n      detail,\n      bubbles: true,\n      cancelable: true\n    });\n    \n    this.container.dispatchEvent(event);\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    if (this.renderer) {\n      this.renderer.destroy();\n      this.renderer = null;\n    }\n\n    // 清理容器内容，但保留Shadow DOM结构以便重用\n    if (this.container.shadowRoot) {\n      this.container.shadowRoot.innerHTML = '';\n    } else {\n      this.container.innerHTML = '';\n    }\n    \n    this.container.removeAttribute('data-smart-iframe');\n    this.container.classList.remove('smart-iframe-container');\n    \n    this.isLoading = false;\n    this.isLoaded = false;\n    this._src = '';\n\n    console.log('[SmartIframe] 组件已销毁');\n  }\n\n  /**\n   * 获取统计信息\n   * @returns {Object} 统计信息\n   */\n  getStats() {\n    return {\n      src: this.src,\n      loading: this.isLoading,\n      loaded: this.isLoaded,\n      renderer: this.renderer ? this.renderer.getStats() : null\n    };\n  }\n\n  /**\n   * 静态方法：创建SmartIframe实例\n   * @param {string|Element} container - 容器\n   * @param {Object} options - 选项\n   * @returns {SmartIframe} SmartIframe实例\n   */\n  static create(container, options = {}) {\n    return new SmartIframe(container, options);\n  }\n\n  /**\n   * 静态方法：获取缓存统计\n   * @returns {Object} 缓存统计信息\n   */\n  static getCacheStats() {\n    return ResourceCache.getCacheStats();\n  }\n\n  /**\n   * 静态方法：清除所有缓存\n   */\n  static clearAllCache() {\n    ResourceCache.clearCache();\n  }\n}\n\nexport default SmartIframe; ","import SmartIframe from '../core/SmartIframe.js';\n\n/**\n * SmartIframe Web Component\n * 使用方式：<smart-iframe src=\"https://example.com\" width=\"800\" height=\"600\"></smart-iframe>\n */\nclass SmartIframeElement extends HTMLElement {\n  constructor() {\n    super();\n    this.smartIframe = null;\n    this.isConnected = false;\n  }\n\n  /**\n   * 定义观察的属性\n   */\n  static get observedAttributes() {\n    return ['src', 'width', 'height', 'sandbox', 'load-images', 'load-scripts', 'load-styles'];\n  }\n\n  /**\n   * 元素连接到DOM时调用\n   */\n  connectedCallback() {\n    this.isConnected = true;\n    this.render();\n  }\n\n  /**\n   * 元素从DOM断开时调用\n   */\n  disconnectedCallback() {\n    this.isConnected = false;\n    if (this.smartIframe) {\n      this.smartIframe.destroy();\n      this.smartIframe = null;\n    }\n  }\n\n  /**\n   * 属性变化时调用\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!this.isConnected || oldValue === newValue) {\n      return;\n    }\n\n    switch (name) {\n      case 'src':\n        if (this.smartIframe && newValue) {\n          this.smartIframe.src = newValue;\n        }\n        break;\n      case 'width':\n        if (this.smartIframe && newValue) {\n          this.smartIframe.width = newValue;\n        }\n        break;\n      case 'height':\n        if (this.smartIframe && newValue) {\n          this.smartIframe.height = newValue;\n        }\n        break;\n      default:\n        // 其他属性变化时重新渲染\n        this.render();\n        break;\n    }\n  }\n\n  /**\n   * 渲染组件\n   */\n  render() {\n    if (this.smartIframe) {\n      this.smartIframe.destroy();\n    }\n\n    // 创建容器div\n    const container = document.createElement('div');\n    container.style.width = '100%';\n    container.style.height = '100%';\n    \n    this.innerHTML = '';\n    this.appendChild(container);\n\n    // 解析配置选项\n    const options = {\n      width: this.getAttribute('width') || '100%',\n      height: this.getAttribute('height') || '400px',\n      sandbox: this.getAttribute('sandbox') !== 'false',\n      loadImages: this.getAttribute('load-images') !== 'false',\n      loadScripts: this.getAttribute('load-scripts') === 'true',\n      loadStyles: this.getAttribute('load-styles') !== 'false'\n    };\n\n    // 创建SmartIframe实例\n    this.smartIframe = new SmartIframe(container, options);\n    \n    // 绑定到容器元素\n    container.smartIframe = this.smartIframe;\n\n    // 设置事件监听\n    this.setupEventListeners();\n\n    // 如果有src属性，立即加载\n    const src = this.getAttribute('src');\n    if (src) {\n      this.smartIframe.load(src).catch(error => {\n        console.error('[SmartIframeElement] 加载失败:', error);\n      });\n    }\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  setupEventListeners() {\n    const container = this.querySelector('div');\n    if (!container) return;\n\n    // 转发SmartIframe的事件\n    container.addEventListener('load', (e) => {\n      this.dispatchEvent(new CustomEvent('load', {\n        detail: e.detail,\n        bubbles: true\n      }));\n    });\n\n    container.addEventListener('error', (e) => {\n      this.dispatchEvent(new CustomEvent('error', {\n        detail: e.detail,\n        bubbles: true\n      }));\n    });\n  }\n\n  /**\n   * src属性的getter\n   */\n  get src() {\n    return this.getAttribute('src') || '';\n  }\n\n  /**\n   * src属性的setter\n   */\n  set src(value) {\n    if (value) {\n      this.setAttribute('src', value);\n    } else {\n      this.removeAttribute('src');\n    }\n  }\n\n  /**\n   * width属性的getter\n   */\n  get width() {\n    return this.getAttribute('width') || '100%';\n  }\n\n  /**\n   * width属性的setter\n   */\n  set width(value) {\n    if (value) {\n      this.setAttribute('width', value);\n    } else {\n      this.removeAttribute('width');\n    }\n  }\n\n  /**\n   * height属性的getter\n   */\n  get height() {\n    return this.getAttribute('height') || '400px';\n  }\n\n  /**\n   * height属性的setter\n   */\n  set height(value) {\n    if (value) {\n      this.setAttribute('height', value);\n    } else {\n      this.removeAttribute('height');\n    }\n  }\n\n  /**\n   * 获取加载状态\n   */\n  get loading() {\n    return this.smartIframe ? this.smartIframe.loading : false;\n  }\n\n  /**\n   * 获取加载完成状态\n   */\n  get loaded() {\n    return this.smartIframe ? this.smartIframe.loaded : false;\n  }\n\n  /**\n   * 重新加载\n   */\n  async reload() {\n    if (this.smartIframe) {\n      await this.smartIframe.reload();\n    }\n  }\n\n  /**\n   * 获取统计信息\n   */\n  getStats() {\n    return this.smartIframe ? this.smartIframe.getStats() : null;\n  }\n}\n\n// 注册自定义元素\nif (!customElements.get('smart-iframe')) {\n  customElements.define('smart-iframe', SmartIframeElement);\n}\n\nexport default SmartIframeElement; ","/**\n * Smart-Iframe SDK\n * 智能iframe替代方案，解决资源重复加载问题\n * \n * 使用方式：\n * 1. ES6 模块：import SmartIframe from 'smart-iframe-sdk'\n * 2. CommonJS：const SmartIframe = require('smart-iframe-sdk')\n * 3. 全局变量：<script src=\"smart-iframe.min.js\"></script>\n * 4. Web Components：<smart-iframe src=\"https://example.com\"></smart-iframe>\n */\n\nimport SmartIframe from './core/SmartIframe.js';\nimport ResourceCache from './core/ResourceCache.js';\nimport Renderer from './core/Renderer.js';\nimport HtmlParser from './utils/htmlParser.js';\nimport SmartIframeElement from './web-components/SmartIframeElement.js';\n\n/**\n * 版本信息\n */\nconst VERSION = '1.0.0';\n\n/**\n * 快速创建SmartIframe实例的工厂函数\n * @param {string|Element} container - 容器选择器或元素\n * @param {Object} options - 配置选项\n * @returns {SmartIframe} SmartIframe实例\n */\nfunction create(container, options = {}) {\n  return new SmartIframe(container, options);\n}\n\n/**\n * 快速加载网页到指定容器\n * @param {string|Element} container - 容器选择器或元素\n * @param {string} url - 要加载的URL\n * @param {Object} options - 配置选项\n * @returns {Promise<SmartIframe>} SmartIframe实例\n */\nasync function load(container, url, options = {}) {\n  const iframe = new SmartIframe(container, options);\n  await iframe.load(url);\n  return iframe;\n}\n\n/**\n * 注册自定义元素到全局\n * 调用后可以在HTML中使用 <smart-iframe> 标签\n */\nfunction registerWebComponent() {\n  if (typeof window !== 'undefined' && window.customElements) {\n    // SmartIframeElement 会自动注册，这里只是确保\n    console.log('[SmartIframe] Web Component 已注册');\n  } else {\n    console.warn('[SmartIframe] 当前环境不支持 Web Components');\n  }\n}\n\n/**\n * 获取SDK信息\n * @returns {Object} SDK信息\n */\nfunction getInfo() {\n  return {\n    name: 'smart-iframe-sdk',\n    version: VERSION,\n    description: '智能iframe替代方案，解决资源重复加载问题',\n    author: 'Smart-Iframe Team',\n    license: 'MIT',\n    cacheStats: ResourceCache.getCacheStats()\n  };\n}\n\n/**\n * 清除所有缓存\n */\nfunction clearCache() {\n  ResourceCache.clearCache();\n  console.log('[SmartIframe] 已清除所有缓存');\n}\n\n/**\n * 设置全局配置\n * @param {Object} config - 全局配置\n */\nfunction setGlobalConfig(config = {}) {\n  if (config.maxCacheSize) {\n    ResourceCache.maxCacheSize = config.maxCacheSize;\n  }\n  \n  if (config.maxAge) {\n    ResourceCache.maxAge = config.maxAge;\n  }\n  \n  console.log('[SmartIframe] 全局配置已更新:', config);\n}\n\n/**\n * 批量预加载URL列表\n * @param {Array<string>} urls - URL列表\n * @returns {Promise<Array>} 预加载结果\n */\nasync function preload(urls) {\n  if (!Array.isArray(urls)) {\n    throw new Error('[SmartIframe] preload 参数必须是数组');\n  }\n  \n  console.log(`[SmartIframe] 开始批量预加载 ${urls.length} 个URL`);\n  return await ResourceCache.preloadResources(urls);\n}\n\n/**\n * 检查浏览器兼容性\n * @returns {Object} 兼容性检查结果\n */\nfunction checkCompatibility() {\n  const isSupported = {\n    shadowDOM: !!Element.prototype.attachShadow,\n    webComponents: typeof customElements !== 'undefined',\n    fetch: typeof fetch !== 'undefined',\n    proxy: typeof Proxy !== 'undefined',\n    asyncAwait: true, // 如果代码能执行到这里就支持\n    es6Classes: true,  // 如果代码能执行到这里就支持\n    es6Modules: true   // 简化检测，如果能导入就支持\n  };\n  \n  const allSupported = Object.values(isSupported).every(Boolean);\n  \n  return {\n    supported: allSupported,\n    features: isSupported,\n    recommendation: allSupported \n      ? '✅ 浏览器完全兼容SmartIframe SDK' \n      : '⚠️ 部分功能可能不可用，建议使用现代浏览器'\n  };\n}\n\n// 默认导出主类\nexport default SmartIframe;\n\n// 命名导出所有API\nexport {\n  SmartIframe,\n  ResourceCache,\n  Renderer,\n  HtmlParser,\n  SmartIframeElement,\n  VERSION,\n  create,\n  load,\n  registerWebComponent,\n  getInfo,\n  clearCache,\n  setGlobalConfig,\n  preload,\n  checkCompatibility\n};\n\n// 如果在浏览器环境中，自动注册到全局\nif (typeof window !== 'undefined') {\n  // 注册到全局对象\n  window.SmartIframe = SmartIframe;\n  window.SmartIframeSDK = {\n    SmartIframe,\n    create,\n    load,\n    registerWebComponent,\n    getInfo,\n    clearCache,\n    setGlobalConfig,\n    preload,\n    checkCompatibility,\n    version: VERSION\n  };\n  \n  // 自动注册Web Component\n  registerWebComponent();\n  \n  console.log(`[SmartIframe] SDK v${VERSION} 已加载`);\n  console.log('[SmartIframe] 兼容性检查:', checkCompatibility());\n}\n\n// 如果是CommonJS环境\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = SmartIframe;\n  module.exports.default = SmartIframe;\n  module.exports.create = create;\n  module.exports.load = load;\n  module.exports.getInfo = getInfo;\n  module.exports.clearCache = clearCache;\n  module.exports.setGlobalConfig = setGlobalConfig;\n  module.exports.preload = preload;\n  module.exports.checkCompatibility = checkCompatibility;\n  module.exports.version = VERSION;\n} "],"names":["ResourceCache","_classCallCheck","_createClass","key","value","_fetchWithCache","_asyncToGenerator","_regenerator","m","_callee","url","options","normalizedUrl","cached","requestPromise","result","_args","arguments","_t","w","_context","n","length","undefined","normalizeUrl","cache","has","get","Date","now","timestamp","maxAge","console","log","concat","a","delete","pendingRequests","v","performRequest","set","p","addToCache","fetchWithCache","_x","apply","_performRequest","_callee2","response","contentType","content","blob","_t2","_context2","fetch","_objectSpread","mode","ok","Error","status","statusText","headers","includes","text","URL","createObjectURL","size","error","_x2","_x3","urlObj","window","location","href","hash","toString","warn","data","maxCacheSize","oldestKey","keys","next","clearCache","clear","getCacheStats","totalSize","Array","from","values","reduce","sum","item","count","maxSize","_preloadResources","_callee3","urls","_this","promises","results","successCount","_context3","map","catch","Promise","all","filter","r","preloadResources","_x4","_defineProperty","Map","HtmlParser","parseHTML","html","baseUrl","parser","DOMParser","doc","parseFromString","resources","stylesheets","scripts","images","links","other","extractStylesheets","extractScripts","extractImages","extractOtherLinks","extractInlineStyleUrls","document","allUrls","getAllUrls","querySelectorAll","forEach","link","getAttribute","absoluteUrl","resolveUrl","push","element","originalUrl","type","styleTags","style","textContent","importMatches","match","urlMatch","parentStyle","_this2","script","src","async","hasAttribute","defer","module","_this3","img","srcset","srcsetUrls","parseSrcset","elementsWithBg","el","bgUrls","extractBackgroundUrls","_this4","rel","otherElements","tagName","toLowerCase","_this5","elementsWithStyle","extractUrlsFromCSS","cssContent","urlRegex","exec","styleContent","_this6","entries","split","entry","trimmed","trim","parts","startsWith","base","resolved","Object","resourceList","resource","rewriteResourceReferences","resourceMap","_this7","setAttribute","replace","newUrl","documentElement","outerHTML","Renderer","container","sandbox","loadImages","loadScripts","loadStyles","shadowRoot","isRendered","_renderUrl","htmlResource","parsed","createShadowRoot","processStyles","renderHTML","processScripts","processImages","dispatchEvent","renderUrl","innerHTML","attachShadow","delegatesFocus","resetStyle","createElement","appendChild","filteredUrls","_processStyles","_iterator","_step","stylesheet","cssResource","processedCSS","_cssResource","_processedCSS","_t3","_createForOfIteratorHelper","s","done","processCSSContent","RegExp","e","f","_processCSSContent","_callee4","urlList","_i","_urls","urlInfo","_t4","_context4","u","btoa","_x5","body","processImageElements","_ref","_callee5","_t5","_context5","_x6","_processScripts","_callee6","_iterator2","_step2","jsResource","_t6","_t7","_context6","executeScriptInSandbox","_x7","scriptContent","scriptUrl","setTimeout","setInterval","clearTimeout","clearInterval","Proxy","target","prop","allowedProps","func","Function","eventName","detail","event","CustomEvent","bubbles","cancelable","destroy","getStats","resourceCount","cacheStats","SmartIframe","resolveContainer","width","height","renderer","isLoading","isLoaded","init","querySelector","Element","setupContainer","setupEventListeners","assign","border","overflow","display","classList","add","addEventListener","_load","showLoadingState","hideLoadingState","showErrorState","load","loadingElement","remove","message","_reload","reload","_src","removeAttribute","loading","loaded","create","clearAllCache","SmartIframeElement","_HTMLElement","_callSuper","smartIframe","isConnected","_inherits","connectedCallback","render","disconnectedCallback","attributeChangedCallback","name","oldValue","newValue","_wrapNativeSuper","HTMLElement","customElements","define","VERSION","iframe","registerWebComponent","getInfo","version","description","author","license","setGlobalConfig","config","preload","_preload","isArray","checkCompatibility","isSupported","shadowDOM","prototype","webComponents","proxy","asyncAwait","es6Classes","es6Modules","allSupported","every","Boolean","supported","features","recommendation","SmartIframeSDK","exports","default"],"mappings":"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"}