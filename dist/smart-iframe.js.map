{"version":3,"file":"smart-iframe.js","sources":["../src/core/ResourceCache.js","../src/utils/htmlParser.js","../src/core/Renderer.js","../src/core/SmartIframe.js","../src/web-components/SmartIframeElement.js","../src/index.js"],"sourcesContent":["/**\n * 资源缓存层 - 解决重复请求问题的核心模块\n */\nclass ResourceCache {\n  static cache = new Map();\n  static pendingRequests = new Map();\n  static maxCacheSize = 100; // 最大缓存数量\n  static maxAge = 30 * 60 * 1000; // 30分钟过期时间\n\n  /**\n   * 带缓存的资源获取\n   * @param {string} url - 资源URL\n   * @param {Object} options - 请求选项\n   * @returns {Promise<Object>} 缓存的资源对象\n   */\n  static async fetchWithCache(url, options = {}) {\n    const normalizedUrl = this.normalizeUrl(url);\n    \n    // 检查缓存\n    if (this.cache.has(normalizedUrl)) {\n      const cached = this.cache.get(normalizedUrl);\n      \n      // 检查是否过期\n      if (Date.now() - cached.timestamp < this.maxAge) {\n        console.log(`[SmartIframe] 使用缓存: ${normalizedUrl}`);\n        return cached;\n      } else {\n        // 删除过期缓存\n        this.cache.delete(normalizedUrl);\n      }\n    }\n\n    // 检查是否有正在进行的请求\n    if (this.pendingRequests.has(normalizedUrl)) {\n      console.log(`[SmartIframe] 等待正在进行的请求: ${normalizedUrl}`);\n      return await this.pendingRequests.get(normalizedUrl);\n    }\n\n    // 发起新请求\n    console.log(`[SmartIframe] 发起新请求: ${normalizedUrl}`);\n    const requestPromise = this.performRequest(normalizedUrl, options);\n    this.pendingRequests.set(normalizedUrl, requestPromise);\n\n    try {\n      const result = await requestPromise;\n      this.pendingRequests.delete(normalizedUrl);\n      \n      // 存入缓存\n      this.addToCache(normalizedUrl, result);\n      return result;\n    } catch (error) {\n      this.pendingRequests.delete(normalizedUrl);\n      throw error;\n    }\n  }\n\n  /**\n   * 执行实际的HTTP请求\n   * @param {string} url - 请求URL\n   * @param {Object} options - 请求选项\n   * @returns {Promise<Object>} 请求结果\n   */\n  static async performRequest(url, options) {\n    try {\n      const response = await fetch(url, {\n        mode: 'cors',\n        cache: 'default',\n        ...options\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const contentType = response.headers.get('content-type') || '';\n      let content;\n\n      if (contentType.includes('text/') || contentType.includes('application/javascript') || contentType.includes('application/json')) {\n        content = await response.text();\n      } else {\n        // 对于二进制资源，转换为blob URL\n        const blob = await response.blob();\n        content = URL.createObjectURL(blob);\n      }\n\n      return {\n        content,\n        contentType,\n        url,\n        timestamp: Date.now(),\n        size: content.length || 0\n      };\n    } catch (error) {\n      console.error(`[SmartIframe] 请求失败: ${url}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * URL标准化处理\n   * @param {string} url - 原始URL\n   * @returns {string} 标准化后的URL\n   */\n  static normalizeUrl(url) {\n    try {\n      const urlObj = new URL(url, window.location.href);\n      // 移除fragment，保留query参数\n      urlObj.hash = '';\n      return urlObj.toString();\n    } catch (error) {\n      console.warn(`[SmartIframe] URL标准化失败: ${url}`, error);\n      return url;\n    }\n  }\n\n  /**\n   * 添加到缓存\n   * @param {string} url - URL\n   * @param {Object} data - 缓存数据\n   */\n  static addToCache(url, data) {\n    // 检查缓存大小限制\n    if (this.cache.size >= this.maxCacheSize) {\n      // 删除最旧的缓存项\n      const oldestKey = this.cache.keys().next().value;\n      this.cache.delete(oldestKey);\n      console.log(`[SmartIframe] 删除最旧缓存: ${oldestKey}`);\n    }\n\n    this.cache.set(url, data);\n    console.log(`[SmartIframe] 缓存已保存: ${url} (${data.size} bytes)`);\n  }\n\n  /**\n   * 清除缓存\n   * @param {string} url - 可选的特定URL，不传则清除全部\n   */\n  static clearCache(url = null) {\n    if (url) {\n      const normalizedUrl = this.normalizeUrl(url);\n      this.cache.delete(normalizedUrl);\n      console.log(`[SmartIframe] 已清除缓存: ${normalizedUrl}`);\n    } else {\n      this.cache.clear();\n      console.log('[SmartIframe] 已清除全部缓存');\n    }\n  }\n\n  /**\n   * 获取缓存统计信息\n   * @returns {Object} 缓存统计\n   */\n  static getCacheStats() {\n    const totalSize = Array.from(this.cache.values())\n      .reduce((sum, item) => sum + (item.size || 0), 0);\n    \n    return {\n      count: this.cache.size,\n      totalSize,\n      maxSize: this.maxCacheSize,\n      pendingRequests: this.pendingRequests.size\n    };\n  }\n\n  /**\n   * 预加载资源列表\n   * @param {Array<string>} urls - 要预加载的URL列表\n   * @returns {Promise<Array>} 预加载结果\n   */\n  static async preloadResources(urls) {\n    console.log(`[SmartIframe] 开始预加载 ${urls.length} 个资源`);\n    const promises = urls.map(url => \n      this.fetchWithCache(url).catch(error => {\n        console.warn(`[SmartIframe] 预加载失败: ${url}`, error);\n        return null;\n      })\n    );\n    \n    const results = await Promise.all(promises);\n    const successCount = results.filter(r => r !== null).length;\n    console.log(`[SmartIframe] 预加载完成: ${successCount}/${urls.length} 成功`);\n    \n    return results;\n  }\n}\n\nexport default ResourceCache; ","/**\n * HTML解析器 - 解析HTML并提取所有资源引用\n */\nclass HtmlParser {\n  /**\n   * 解析HTML内容，提取所有资源引用\n   * @param {string} html - HTML内容\n   * @param {string} baseUrl - 基础URL，用于解析相对路径\n   * @returns {Object} 解析结果\n   */\n  static parseHTML(html, baseUrl) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    \n    const resources = {\n      stylesheets: [],\n      scripts: [],\n      images: [],\n      links: [],\n      other: []\n    };\n\n    // 提取CSS资源\n    this.extractStylesheets(doc, resources, baseUrl);\n    \n    // 提取JavaScript资源\n    this.extractScripts(doc, resources, baseUrl);\n    \n    // 提取图片资源\n    this.extractImages(doc, resources, baseUrl);\n    \n    // 提取其他链接资源\n    this.extractOtherLinks(doc, resources, baseUrl);\n\n    // 处理内联样式中的URL\n    this.extractInlineStyleUrls(doc, resources, baseUrl);\n\n    return {\n      document: doc,\n      resources,\n      allUrls: this.getAllUrls(resources)\n    };\n  }\n\n  /**\n   * 提取CSS样式表\n   */\n  static extractStylesheets(doc, resources, baseUrl) {\n    const links = doc.querySelectorAll('link[rel=\"stylesheet\"], link[rel=\"preload\"][as=\"style\"]');\n    \n    links.forEach(link => {\n      const href = link.getAttribute('href');\n      if (href) {\n        const absoluteUrl = this.resolveUrl(href, baseUrl);\n        resources.stylesheets.push({\n          element: link,\n          originalUrl: href,\n          absoluteUrl,\n          type: 'stylesheet'\n        });\n      }\n    });\n\n    // 提取style标签中的@import\n    const styleTags = doc.querySelectorAll('style');\n    styleTags.forEach(style => {\n      const content = style.textContent;\n      const importMatches = content.match(/@import\\s+(?:url\\()?[\"']?([^\"')]+)[\"']?\\)?[^;]*;/g);\n      \n      if (importMatches) {\n        importMatches.forEach(match => {\n          const urlMatch = match.match(/[\"']?([^\"')]+)[\"']?/);\n          if (urlMatch && urlMatch[1]) {\n            const absoluteUrl = this.resolveUrl(urlMatch[1], baseUrl);\n            resources.stylesheets.push({\n              element: style,\n              originalUrl: urlMatch[1],\n              absoluteUrl,\n              type: 'import',\n              parentStyle: style\n            });\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * 提取JavaScript脚本\n   */\n  static extractScripts(doc, resources, baseUrl) {\n    const scripts = doc.querySelectorAll('script[src]');\n    \n    scripts.forEach(script => {\n      const src = script.getAttribute('src');\n      if (src) {\n        const absoluteUrl = this.resolveUrl(src, baseUrl);\n        resources.scripts.push({\n          element: script,\n          originalUrl: src,\n          absoluteUrl,\n          type: 'script',\n          async: script.hasAttribute('async'),\n          defer: script.hasAttribute('defer'),\n          module: script.type === 'module'\n        });\n      }\n    });\n  }\n\n  /**\n   * 提取图片资源\n   */\n  static extractImages(doc, resources, baseUrl) {\n    const images = doc.querySelectorAll('img[src], img[data-src]');\n    \n    images.forEach(img => {\n      const src = img.getAttribute('src') || img.getAttribute('data-src');\n      if (src) {\n        const absoluteUrl = this.resolveUrl(src, baseUrl);\n        resources.images.push({\n          element: img,\n          originalUrl: src,\n          absoluteUrl,\n          type: 'image'\n        });\n      }\n\n      // 处理srcset\n      const srcset = img.getAttribute('srcset');\n      if (srcset) {\n        const srcsetUrls = this.parseSrcset(srcset, baseUrl);\n        srcsetUrls.forEach(url => {\n          resources.images.push({\n            element: img,\n            originalUrl: url.originalUrl,\n            absoluteUrl: url.absoluteUrl,\n            type: 'image-srcset'\n          });\n        });\n      }\n    });\n\n    // 处理背景图片\n    const elementsWithBg = doc.querySelectorAll('[style*=\"background\"]');\n    elementsWithBg.forEach(el => {\n      const style = el.getAttribute('style');\n      const bgUrls = this.extractBackgroundUrls(style, baseUrl);\n      bgUrls.forEach(url => {\n        resources.images.push({\n          element: el,\n          originalUrl: url.originalUrl,\n          absoluteUrl: url.absoluteUrl,\n          type: 'background-image'\n        });\n      });\n    });\n  }\n\n  /**\n   * 提取其他链接资源\n   */\n  static extractOtherLinks(doc, resources, baseUrl) {\n    const links = doc.querySelectorAll('link:not([rel=\"stylesheet\"]):not([rel=\"preload\"][as=\"style\"])');\n    \n    links.forEach(link => {\n      const href = link.getAttribute('href');\n      if (href) {\n        const absoluteUrl = this.resolveUrl(href, baseUrl);\n        const rel = link.getAttribute('rel') || 'unknown';\n        \n        resources.links.push({\n          element: link,\n          originalUrl: href,\n          absoluteUrl,\n          type: 'link',\n          rel\n        });\n      }\n    });\n\n    // 处理其他可能的资源引用\n    const otherElements = doc.querySelectorAll('source[src], track[src], embed[src], object[data]');\n    otherElements.forEach(el => {\n      const src = el.getAttribute('src') || el.getAttribute('data');\n      if (src) {\n        const absoluteUrl = this.resolveUrl(src, baseUrl);\n        resources.other.push({\n          element: el,\n          originalUrl: src,\n          absoluteUrl,\n          type: el.tagName.toLowerCase()\n        });\n      }\n    });\n  }\n\n  /**\n   * 提取内联样式中的URL\n   */\n  static extractInlineStyleUrls(doc, resources, baseUrl) {\n    const elementsWithStyle = doc.querySelectorAll('[style]');\n    \n    elementsWithStyle.forEach(el => {\n      const style = el.getAttribute('style');\n      const urls = this.extractUrlsFromCSS(style, baseUrl);\n      \n      urls.forEach(url => {\n        resources.other.push({\n          element: el,\n          originalUrl: url.originalUrl,\n          absoluteUrl: url.absoluteUrl,\n          type: 'inline-style'\n        });\n      });\n    });\n  }\n\n  /**\n   * 从CSS内容中提取URL\n   */\n  static extractUrlsFromCSS(cssContent, baseUrl) {\n    const urls = [];\n    const urlRegex = /url\\(\\s*[\"']?([^\"')]+)[\"']?\\s*\\)/g;\n    let match;\n\n    while ((match = urlRegex.exec(cssContent)) !== null) {\n      const originalUrl = match[1];\n      const absoluteUrl = this.resolveUrl(originalUrl, baseUrl);\n      urls.push({ originalUrl, absoluteUrl });\n    }\n\n    return urls;\n  }\n\n  /**\n   * 提取背景图片URL\n   */\n  static extractBackgroundUrls(styleContent, baseUrl) {\n    return this.extractUrlsFromCSS(styleContent, baseUrl);\n  }\n\n  /**\n   * 解析srcset属性\n   */\n  static parseSrcset(srcset, baseUrl) {\n    const urls = [];\n    const entries = srcset.split(',');\n    \n    entries.forEach(entry => {\n      const trimmed = entry.trim();\n      const parts = trimmed.split(/\\s+/);\n      if (parts.length > 0) {\n        const originalUrl = parts[0];\n        const absoluteUrl = this.resolveUrl(originalUrl, baseUrl);\n        urls.push({ originalUrl, absoluteUrl });\n      }\n    });\n\n    return urls;\n  }\n\n  /**\n   * 解析相对URL为绝对URL\n   */\n  static resolveUrl(url, baseUrl) {\n    try {\n      // 如果已经是绝对URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('//')) {\n        return url.startsWith('//') ? `https:${url}` : url;\n      }\n\n      // 如果是data URL或其他特殊协议，直接返回\n      if (url.startsWith('data:') || url.startsWith('blob:') || url.startsWith('javascript:')) {\n        return url;\n      }\n\n      // 解析相对URL\n      const base = new URL(baseUrl);\n      const resolved = new URL(url, base);\n      return resolved.toString();\n    } catch (error) {\n      console.warn(`[SmartIframe] URL解析失败: ${url} (base: ${baseUrl})`, error);\n      return url;\n    }\n  }\n\n  /**\n   * 获取所有资源URL列表\n   */\n  static getAllUrls(resources) {\n    const allUrls = [];\n    \n    Object.values(resources).forEach(resourceList => {\n      resourceList.forEach(resource => {\n        if (resource.absoluteUrl && !allUrls.includes(resource.absoluteUrl)) {\n          allUrls.push(resource.absoluteUrl);\n        }\n      });\n    });\n\n    return allUrls;\n  }\n\n  /**\n   * 重写HTML中的资源引用\n   * @param {Document} doc - DOM文档\n   * @param {Object} resourceMap - 资源映射表 {originalUrl: newUrl}\n   * @returns {string} 重写后的HTML\n   */\n  static rewriteResourceReferences(doc, resourceMap) {\n    // 重写link标签\n    doc.querySelectorAll('link[href]').forEach(link => {\n      const href = link.getAttribute('href');\n      const absoluteUrl = this.resolveUrl(href, window.location.href);\n      if (resourceMap[absoluteUrl]) {\n        link.setAttribute('href', resourceMap[absoluteUrl]);\n      }\n    });\n\n    // 重写script标签\n    doc.querySelectorAll('script[src]').forEach(script => {\n      const src = script.getAttribute('src');\n      const absoluteUrl = this.resolveUrl(src, window.location.href);\n      if (resourceMap[absoluteUrl]) {\n        script.setAttribute('src', resourceMap[absoluteUrl]);\n      }\n    });\n\n    // 重写img标签\n    doc.querySelectorAll('img[src]').forEach(img => {\n      const src = img.getAttribute('src');\n      const absoluteUrl = this.resolveUrl(src, window.location.href);\n      if (resourceMap[absoluteUrl]) {\n        img.setAttribute('src', resourceMap[absoluteUrl]);\n      }\n    });\n\n    // 重写style标签中的@import和url()\n    doc.querySelectorAll('style').forEach(style => {\n      let content = style.textContent;\n      \n      // 替换所有URL引用\n      content = content.replace(/url\\(\\s*[\"']?([^\"')]+)[\"']?\\s*\\)/g, (match, url) => {\n        const absoluteUrl = this.resolveUrl(url, window.location.href);\n        const newUrl = resourceMap[absoluteUrl] || url;\n        return match.replace(url, newUrl);\n      });\n\n      style.textContent = content;\n    });\n\n    return doc.documentElement.outerHTML;\n  }\n}\n\nexport default HtmlParser; ","import ResourceCache from './ResourceCache.js';\nimport HtmlParser from '../utils/htmlParser.js';\n\n/**\n * 渲染引擎 - 负责在Shadow DOM中渲染完整网页\n */\nclass Renderer {\n  constructor(container, options = {}) {\n    this.container = container;\n    this.options = {\n      sandbox: true,\n      loadImages: true,\n      loadScripts: true,\n      loadStyles: true,\n      ...options\n    };\n    \n    this.shadowRoot = null;\n    this.baseUrl = '';\n    this.resourceMap = new Map();\n    this.isRendered = false;\n  }\n\n  /**\n   * 渲染URL指定的网页\n   * @param {string} url - 要渲染的网页URL\n   * @returns {Promise<void>}\n   */\n  async renderUrl(url) {\n    try {\n      console.log(`[SmartIframe] 开始渲染: ${url}`);\n      this.baseUrl = url;\n\n      // 1. 获取HTML内容\n      const htmlResource = await ResourceCache.fetchWithCache(url);\n      \n      // 2. 解析HTML并提取资源\n      const parsed = HtmlParser.parseHTML(htmlResource.content, url);\n      \n      // 3. 预加载所有资源\n      if (parsed.allUrls.length > 0) {\n        await this.preloadResources(parsed.allUrls);\n      }\n\n      // 4. 创建Shadow DOM\n      this.createShadowRoot();\n\n      // 5. 处理CSS样式\n      await this.processStyles(parsed.resources.stylesheets);\n\n      // 6. 渲染HTML结构\n      this.renderHTML(parsed.document);\n\n      // 7. 处理JavaScript（如果启用）\n      if (this.options.loadScripts) {\n        await this.processScripts(parsed.resources.scripts);\n      }\n\n      // 8. 处理图片资源\n      if (this.options.loadImages) {\n        this.processImages(parsed.resources.images);\n      }\n\n      this.isRendered = true;\n      console.log(`[SmartIframe] 渲染完成: ${url}`);\n      \n      // 触发渲染完成事件\n      this.dispatchEvent('rendered', { url, resources: parsed.resources });\n\n    } catch (error) {\n      console.error(`[SmartIframe] 渲染失败: ${url}`, error);\n      this.dispatchEvent('error', { url, error });\n      throw error;\n    }\n  }\n\n  /**\n   * 创建Shadow DOM\n   */\n  createShadowRoot() {\n    if (this.shadowRoot) {\n      return;\n    }\n\n    // 检查容器是否已经有Shadow DOM\n    if (this.container.shadowRoot) {\n      this.shadowRoot = this.container.shadowRoot;\n      // 清空现有内容\n      this.shadowRoot.innerHTML = '';\n    } else {\n      this.shadowRoot = this.container.attachShadow({ \n        mode: 'closed',\n        delegatesFocus: false \n      });\n    }\n\n    // 添加基础样式重置\n    const resetStyle = document.createElement('style');\n    resetStyle.textContent = `\n      :host {\n        display: block;\n        width: 100%;\n        height: 100%;\n        overflow: auto;\n      }\n      \n      html, body {\n        margin: 0;\n        padding: 0;\n        width: 100%;\n        height: 100%;\n      }\n    `;\n    \n    this.shadowRoot.appendChild(resetStyle);\n  }\n\n  /**\n   * 预加载资源\n   * @param {Array<string>} urls - 资源URL列表\n   */\n  async preloadResources(urls) {\n    const filteredUrls = urls.filter(url => {\n      // 过滤掉不需要预加载的资源\n      return !url.startsWith('data:') && \n             !url.startsWith('blob:') && \n             !url.startsWith('javascript:');\n    });\n\n    if (filteredUrls.length > 0) {\n      await ResourceCache.preloadResources(filteredUrls);\n    }\n  }\n\n  /**\n   * 处理CSS样式\n   * @param {Array} stylesheets - CSS资源列表\n   */\n  async processStyles(stylesheets) {\n    if (!this.options.loadStyles) {\n      return;\n    }\n\n    for (const stylesheet of stylesheets) {\n      try {\n        if (stylesheet.type === 'stylesheet') {\n          const cssResource = await ResourceCache.fetchWithCache(stylesheet.absoluteUrl);\n          const processedCSS = await this.processCSSContent(cssResource.content, stylesheet.absoluteUrl);\n          \n          const style = document.createElement('style');\n          style.textContent = processedCSS;\n          this.shadowRoot.appendChild(style);\n          \n        } else if (stylesheet.type === 'import') {\n          // 处理@import\n          const cssResource = await ResourceCache.fetchWithCache(stylesheet.absoluteUrl);\n          const processedCSS = await this.processCSSContent(cssResource.content, stylesheet.absoluteUrl);\n          \n          // 替换原来的@import\n          const parentStyle = stylesheet.parentStyle;\n          if (parentStyle) {\n            let content = parentStyle.textContent;\n            content = content.replace(\n              new RegExp(`@import\\\\s+(?:url\\\\()?[\"']?${stylesheet.originalUrl.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}[\"']?\\\\)?[^;]*;`),\n              processedCSS\n            );\n            parentStyle.textContent = content;\n          }\n        }\n      } catch (error) {\n        console.warn(`[SmartIframe] CSS加载失败: ${stylesheet.absoluteUrl}`, error);\n      }\n    }\n  }\n\n  /**\n   * 处理CSS内容，解析其中的url()引用\n   * @param {string} cssContent - CSS内容\n   * @param {string} baseUrl - CSS文件的基础URL\n   * @returns {Promise<string>} 处理后的CSS内容\n   */\n  async processCSSContent(cssContent, baseUrl) {\n    // 提取CSS中的所有URL引用\n    const urlRegex = /url\\(\\s*[\"']?([^\"')]+)[\"']?\\s*\\)/g;\n    const urls = [];\n    let match;\n\n    while ((match = urlRegex.exec(cssContent)) !== null) {\n      const url = match[1];\n      if (!url.startsWith('data:') && !url.startsWith('blob:')) {\n        const absoluteUrl = HtmlParser.resolveUrl(url, baseUrl);\n        urls.push({ originalUrl: url, absoluteUrl });\n      }\n    }\n\n    // 预加载这些资源\n    if (urls.length > 0) {\n      const urlList = urls.map(u => u.absoluteUrl);\n      await ResourceCache.preloadResources(urlList);\n    }\n\n    // 替换URL引用为缓存的blob URL\n    let processedCSS = cssContent;\n    for (const urlInfo of urls) {\n      try {\n        const resource = await ResourceCache.fetchWithCache(urlInfo.absoluteUrl);\n        if (resource && resource.content) {\n          // 如果是blob URL，直接使用\n          const newUrl = resource.content.startsWith('blob:') ? resource.content : `data:${resource.contentType};base64,${btoa(resource.content)}`;\n          processedCSS = processedCSS.replace(\n            new RegExp(`url\\\\(\\\\s*[\"']?${urlInfo.originalUrl.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}[\"']?\\\\s*\\\\)`, 'g'),\n            `url(${newUrl})`\n          );\n        }\n      } catch (error) {\n        console.warn(`[SmartIframe] CSS资源处理失败: ${urlInfo.absoluteUrl}`, error);\n      }\n    }\n\n    return processedCSS;\n  }\n\n  /**\n   * 渲染HTML结构\n   * @param {Document} doc - 解析后的文档\n   */\n  renderHTML(doc) {\n    // 克隆body内容到shadow root\n    const body = doc.body;\n    if (body) {\n      // 创建一个容器div\n      const container = document.createElement('div');\n      container.innerHTML = body.innerHTML;\n      \n      // 处理所有图片的src属性\n      this.processImageElements(container);\n      \n      this.shadowRoot.appendChild(container);\n    }\n  }\n\n  /**\n   * 处理图片元素\n   * @param {Element} container - 容器元素\n   */\n  processImageElements(container) {\n    const images = container.querySelectorAll('img');\n    \n    images.forEach(async (img) => {\n      const src = img.getAttribute('src');\n      if (src && !src.startsWith('data:') && !src.startsWith('blob:')) {\n        try {\n          const absoluteUrl = HtmlParser.resolveUrl(src, this.baseUrl);\n          const resource = await ResourceCache.fetchWithCache(absoluteUrl);\n          \n          if (resource && resource.content) {\n            if (resource.content.startsWith('blob:')) {\n              img.src = resource.content;\n            } else {\n              // 转换为data URL\n              img.src = `data:${resource.contentType};base64,${btoa(resource.content)}`;\n            }\n          }\n        } catch (error) {\n          console.warn(`[SmartIframe] 图片加载失败: ${src}`, error);\n        }\n      }\n    });\n  }\n\n  /**\n   * 处理JavaScript脚本\n   * @param {Array} scripts - 脚本资源列表\n   */\n  async processScripts(scripts) {\n    if (!this.options.sandbox) {\n      console.warn('[SmartIframe] 脚本执行需要沙箱环境，跳过JavaScript处理');\n      return;\n    }\n\n    for (const script of scripts) {\n      try {\n        const jsResource = await ResourceCache.fetchWithCache(script.absoluteUrl);\n        \n        // 在沙箱环境中执行脚本\n        this.executeScriptInSandbox(jsResource.content, script.absoluteUrl);\n        \n      } catch (error) {\n        console.warn(`[SmartIframe] 脚本加载失败: ${script.absoluteUrl}`, error);\n      }\n    }\n  }\n\n  /**\n   * 在沙箱中执行脚本\n   * @param {string} scriptContent - 脚本内容\n   * @param {string} scriptUrl - 脚本URL\n   */\n  executeScriptInSandbox(scriptContent, scriptUrl) {\n    try {\n      // 创建一个受限的执行环境\n      const sandbox = {\n        console,\n        setTimeout,\n        setInterval,\n        clearTimeout,\n        clearInterval,\n        document: this.shadowRoot,\n        window: new Proxy({}, {\n          get: (target, prop) => {\n            // 只允许访问安全的属性\n            const allowedProps = ['console', 'setTimeout', 'setInterval', 'clearTimeout', 'clearInterval'];\n            if (allowedProps.includes(prop)) {\n              return sandbox[prop];\n            }\n            return undefined;\n          }\n        })\n      };\n\n      // 使用Function构造器创建沙箱环境\n      const func = new Function('sandbox', `\n        with(sandbox) {\n          ${scriptContent}\n        }\n      `);\n\n      func(sandbox);\n      \n    } catch (error) {\n      console.error(`[SmartIframe] 脚本执行失败: ${scriptUrl}`, error);\n    }\n  }\n\n  /**\n   * 处理图片资源\n   * @param {Array} images - 图片资源列表\n   */\n  processImages(images) {\n    // 图片处理已经在renderHTML中进行了\n    console.log(`[SmartIframe] 处理了 ${images.length} 个图片资源`);\n  }\n\n  /**\n   * 触发自定义事件\n   * @param {string} eventName - 事件名称\n   * @param {Object} detail - 事件详情\n   */\n  dispatchEvent(eventName, detail = {}) {\n    const event = new CustomEvent(`smartiframe:${eventName}`, {\n      detail,\n      bubbles: true,\n      cancelable: true\n    });\n    \n    this.container.dispatchEvent(event);\n  }\n\n  /**\n   * 销毁渲染器\n   */\n  destroy() {\n    if (this.shadowRoot) {\n      this.shadowRoot.innerHTML = '';\n    }\n    \n    this.resourceMap.clear();\n    this.isRendered = false;\n    \n    console.log('[SmartIframe] 渲染器已销毁');\n  }\n\n  /**\n   * 获取渲染统计信息\n   * @returns {Object} 统计信息\n   */\n  getStats() {\n    return {\n      isRendered: this.isRendered,\n      baseUrl: this.baseUrl,\n      resourceCount: this.resourceMap.size,\n      cacheStats: ResourceCache.getCacheStats()\n    };\n  }\n}\n\nexport default Renderer; ","import Renderer from './Renderer.js';\nimport ResourceCache from './ResourceCache.js';\n\n/**\n * SmartIframe - 智能iframe替代方案的核心组件\n */\nclass SmartIframe {\n  constructor(container, options = {}) {\n    this.container = this.resolveContainer(container);\n    this.options = {\n      width: '100%',\n      height: '400px',\n      sandbox: true,\n      loadImages: true,\n      loadScripts: false, // 默认关闭脚本执行，提高安全性\n      loadStyles: true,\n      cache: true,\n      ...options\n    };\n\n    this.src = '';\n    this.renderer = null;\n    this.isLoading = false;\n    this.isLoaded = false;\n    \n    this.init();\n  }\n\n  /**\n   * 解析容器元素\n   * @param {string|Element} container - 容器选择器或元素\n   * @returns {Element} 容器元素\n   */\n  resolveContainer(container) {\n    if (typeof container === 'string') {\n      const element = document.querySelector(container);\n      if (!element) {\n        throw new Error(`[SmartIframe] 找不到容器元素: ${container}`);\n      }\n      return element;\n    } else if (container instanceof Element) {\n      return container;\n    } else {\n      throw new Error('[SmartIframe] 无效的容器参数');\n    }\n  }\n\n  /**\n   * 初始化组件\n   */\n  init() {\n    this.setupContainer();\n    this.setupEventListeners();\n    this.renderer = new Renderer(this.container, this.options);\n  }\n\n  /**\n   * 设置容器样式\n   */\n  setupContainer() {\n    // 设置容器基础样式\n    Object.assign(this.container.style, {\n      width: this.options.width,\n      height: this.options.height,\n      border: 'none',\n      overflow: 'hidden',\n      display: 'block'\n    });\n\n    // 添加SmartIframe标识\n    this.container.setAttribute('data-smart-iframe', 'true');\n    this.container.classList.add('smart-iframe-container');\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  setupEventListeners() {\n    // 监听渲染事件\n    this.container.addEventListener('smartiframe:rendered', (e) => {\n      this.isLoading = false;\n      this.isLoaded = true;\n      this.dispatchEvent('load', e.detail);\n    });\n\n    // 监听错误事件\n    this.container.addEventListener('smartiframe:error', (e) => {\n      this.isLoading = false;\n      this.isLoaded = false;\n      this.dispatchEvent('error', e.detail);\n    });\n  }\n\n  /**\n   * 加载指定URL的内容\n   * @param {string} url - 要加载的URL\n   * @returns {Promise<void>}\n   */\n  async load(url) {\n    if (!url) {\n      throw new Error('[SmartIframe] URL不能为空');\n    }\n\n    if (this.isLoading) {\n      console.warn('[SmartIframe] 正在加载中，忽略新的加载请求');\n      return;\n    }\n\n    try {\n      this.isLoading = true;\n      this.isLoaded = false;\n      this.src = url;\n\n      // 显示加载状态\n      this.showLoadingState();\n\n      // 使用渲染器加载内容\n      await this.renderer.renderUrl(url);\n\n      // 隐藏加载状态\n      this.hideLoadingState();\n\n    } catch (error) {\n      this.hideLoadingState();\n      this.showErrorState(error);\n      throw error;\n    }\n  }\n\n  /**\n   * 显示加载状态\n   */\n  showLoadingState() {\n    this.container.innerHTML = `\n      <div class=\"smart-iframe-loading\" style=\"\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        font-family: Arial, sans-serif;\n        color: #666;\n        background: #f5f5f5;\n      \">\n        <div style=\"text-align: center;\">\n          <div style=\"\n            width: 40px;\n            height: 40px;\n            border: 3px solid #e0e0e0;\n            border-top: 3px solid #007bff;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            margin: 0 auto 10px;\n          \"></div>\n          <div>正在加载...</div>\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      </div>\n    `;\n  }\n\n  /**\n   * 隐藏加载状态\n   */\n  hideLoadingState() {\n    const loadingElement = this.container.querySelector('.smart-iframe-loading');\n    if (loadingElement) {\n      loadingElement.remove();\n    }\n  }\n\n  /**\n   * 显示错误状态\n   * @param {Error} error - 错误对象\n   */\n  showErrorState(error) {\n    this.container.innerHTML = `\n      <div class=\"smart-iframe-error\" style=\"\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        font-family: Arial, sans-serif;\n        background: #fff;\n        border: 1px solid #ddd;\n      \">\n        <div style=\"text-align: center; color: #666; padding: 20px;\">\n          <div style=\"font-size: 48px; margin-bottom: 10px;\">⚠️</div>\n          <div style=\"font-size: 16px; margin-bottom: 10px;\">加载失败</div>\n          <div style=\"font-size: 14px; color: #999;\">${error.message}</div>\n          <button onclick=\"this.closest('.smart-iframe-container').smartIframe.reload()\" \n                  style=\"\n                    margin-top: 15px;\n                    padding: 8px 16px;\n                    background: #007bff;\n                    color: white;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                  \">\n            重新加载\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * 重新加载当前URL\n   * @returns {Promise<void>}\n   */\n  async reload() {\n    if (this.src) {\n      // 清除该URL的缓存\n      if (this.options.cache) {\n        ResourceCache.clearCache(this.src);\n      }\n      await this.load(this.src);\n    }\n  }\n\n  /**\n   * 设置src属性（类似iframe的src）\n   * @param {string} url - URL\n   */\n  set src(url) {\n    this._src = url;\n    if (url) {\n      this.load(url).catch(error => {\n        console.error('[SmartIframe] 自动加载失败:', error);\n      });\n    }\n  }\n\n  /**\n   * 获取src属性\n   * @returns {string} 当前的URL\n   */\n  get src() {\n    return this._src || '';\n  }\n\n  /**\n   * 设置宽度\n   * @param {string} width - 宽度值\n   */\n  set width(width) {\n    this.options.width = width;\n    this.container.style.width = width;\n  }\n\n  /**\n   * 获取宽度\n   * @returns {string} 当前宽度\n   */\n  get width() {\n    return this.options.width;\n  }\n\n  /**\n   * 设置高度\n   * @param {string} height - 高度值\n   */\n  set height(height) {\n    this.options.height = height;\n    this.container.style.height = height;\n  }\n\n  /**\n   * 获取高度\n   * @returns {string} 当前高度\n   */\n  get height() {\n    return this.options.height;\n  }\n\n  /**\n   * 获取加载状态\n   * @returns {boolean} 是否正在加载\n   */\n  get loading() {\n    return this.isLoading;\n  }\n\n  /**\n   * 获取加载完成状态\n   * @returns {boolean} 是否已加载完成\n   */\n  get loaded() {\n    return this.isLoaded;\n  }\n\n  /**\n   * 触发自定义事件\n   * @param {string} eventName - 事件名称\n   * @param {Object} detail - 事件详情\n   */\n  dispatchEvent(eventName, detail = {}) {\n    const event = new CustomEvent(eventName, {\n      detail,\n      bubbles: true,\n      cancelable: true\n    });\n    \n    this.container.dispatchEvent(event);\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    if (this.renderer) {\n      this.renderer.destroy();\n      this.renderer = null;\n    }\n\n    // 清理容器内容，但保留Shadow DOM结构以便重用\n    if (this.container.shadowRoot) {\n      this.container.shadowRoot.innerHTML = '';\n    } else {\n      this.container.innerHTML = '';\n    }\n    \n    this.container.removeAttribute('data-smart-iframe');\n    this.container.classList.remove('smart-iframe-container');\n    \n    this.isLoading = false;\n    this.isLoaded = false;\n    this._src = '';\n\n    console.log('[SmartIframe] 组件已销毁');\n  }\n\n  /**\n   * 获取统计信息\n   * @returns {Object} 统计信息\n   */\n  getStats() {\n    return {\n      src: this.src,\n      loading: this.isLoading,\n      loaded: this.isLoaded,\n      renderer: this.renderer ? this.renderer.getStats() : null\n    };\n  }\n\n  /**\n   * 静态方法：创建SmartIframe实例\n   * @param {string|Element} container - 容器\n   * @param {Object} options - 选项\n   * @returns {SmartIframe} SmartIframe实例\n   */\n  static create(container, options = {}) {\n    return new SmartIframe(container, options);\n  }\n\n  /**\n   * 静态方法：获取缓存统计\n   * @returns {Object} 缓存统计信息\n   */\n  static getCacheStats() {\n    return ResourceCache.getCacheStats();\n  }\n\n  /**\n   * 静态方法：清除所有缓存\n   */\n  static clearAllCache() {\n    ResourceCache.clearCache();\n  }\n}\n\nexport default SmartIframe; ","import SmartIframe from '../core/SmartIframe.js';\n\n/**\n * SmartIframe Web Component\n * 使用方式：<smart-iframe src=\"https://example.com\" width=\"800\" height=\"600\"></smart-iframe>\n */\nclass SmartIframeElement extends HTMLElement {\n  constructor() {\n    super();\n    this.smartIframe = null;\n    this.isConnected = false;\n  }\n\n  /**\n   * 定义观察的属性\n   */\n  static get observedAttributes() {\n    return ['src', 'width', 'height', 'sandbox', 'load-images', 'load-scripts', 'load-styles'];\n  }\n\n  /**\n   * 元素连接到DOM时调用\n   */\n  connectedCallback() {\n    this.isConnected = true;\n    this.render();\n  }\n\n  /**\n   * 元素从DOM断开时调用\n   */\n  disconnectedCallback() {\n    this.isConnected = false;\n    if (this.smartIframe) {\n      this.smartIframe.destroy();\n      this.smartIframe = null;\n    }\n  }\n\n  /**\n   * 属性变化时调用\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!this.isConnected || oldValue === newValue) {\n      return;\n    }\n\n    switch (name) {\n      case 'src':\n        if (this.smartIframe && newValue) {\n          this.smartIframe.src = newValue;\n        }\n        break;\n      case 'width':\n        if (this.smartIframe && newValue) {\n          this.smartIframe.width = newValue;\n        }\n        break;\n      case 'height':\n        if (this.smartIframe && newValue) {\n          this.smartIframe.height = newValue;\n        }\n        break;\n      default:\n        // 其他属性变化时重新渲染\n        this.render();\n        break;\n    }\n  }\n\n  /**\n   * 渲染组件\n   */\n  render() {\n    if (this.smartIframe) {\n      this.smartIframe.destroy();\n    }\n\n    // 创建容器div\n    const container = document.createElement('div');\n    container.style.width = '100%';\n    container.style.height = '100%';\n    \n    this.innerHTML = '';\n    this.appendChild(container);\n\n    // 解析配置选项\n    const options = {\n      width: this.getAttribute('width') || '100%',\n      height: this.getAttribute('height') || '400px',\n      sandbox: this.getAttribute('sandbox') !== 'false',\n      loadImages: this.getAttribute('load-images') !== 'false',\n      loadScripts: this.getAttribute('load-scripts') === 'true',\n      loadStyles: this.getAttribute('load-styles') !== 'false'\n    };\n\n    // 创建SmartIframe实例\n    this.smartIframe = new SmartIframe(container, options);\n    \n    // 绑定到容器元素\n    container.smartIframe = this.smartIframe;\n\n    // 设置事件监听\n    this.setupEventListeners();\n\n    // 如果有src属性，立即加载\n    const src = this.getAttribute('src');\n    if (src) {\n      this.smartIframe.load(src).catch(error => {\n        console.error('[SmartIframeElement] 加载失败:', error);\n      });\n    }\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  setupEventListeners() {\n    const container = this.querySelector('div');\n    if (!container) return;\n\n    // 转发SmartIframe的事件\n    container.addEventListener('load', (e) => {\n      this.dispatchEvent(new CustomEvent('load', {\n        detail: e.detail,\n        bubbles: true\n      }));\n    });\n\n    container.addEventListener('error', (e) => {\n      this.dispatchEvent(new CustomEvent('error', {\n        detail: e.detail,\n        bubbles: true\n      }));\n    });\n  }\n\n  /**\n   * src属性的getter\n   */\n  get src() {\n    return this.getAttribute('src') || '';\n  }\n\n  /**\n   * src属性的setter\n   */\n  set src(value) {\n    if (value) {\n      this.setAttribute('src', value);\n    } else {\n      this.removeAttribute('src');\n    }\n  }\n\n  /**\n   * width属性的getter\n   */\n  get width() {\n    return this.getAttribute('width') || '100%';\n  }\n\n  /**\n   * width属性的setter\n   */\n  set width(value) {\n    if (value) {\n      this.setAttribute('width', value);\n    } else {\n      this.removeAttribute('width');\n    }\n  }\n\n  /**\n   * height属性的getter\n   */\n  get height() {\n    return this.getAttribute('height') || '400px';\n  }\n\n  /**\n   * height属性的setter\n   */\n  set height(value) {\n    if (value) {\n      this.setAttribute('height', value);\n    } else {\n      this.removeAttribute('height');\n    }\n  }\n\n  /**\n   * 获取加载状态\n   */\n  get loading() {\n    return this.smartIframe ? this.smartIframe.loading : false;\n  }\n\n  /**\n   * 获取加载完成状态\n   */\n  get loaded() {\n    return this.smartIframe ? this.smartIframe.loaded : false;\n  }\n\n  /**\n   * 重新加载\n   */\n  async reload() {\n    if (this.smartIframe) {\n      await this.smartIframe.reload();\n    }\n  }\n\n  /**\n   * 获取统计信息\n   */\n  getStats() {\n    return this.smartIframe ? this.smartIframe.getStats() : null;\n  }\n}\n\n// 注册自定义元素\nif (!customElements.get('smart-iframe')) {\n  customElements.define('smart-iframe', SmartIframeElement);\n}\n\nexport default SmartIframeElement; ","/**\n * Smart-Iframe SDK\n * 智能iframe替代方案，解决资源重复加载问题\n * \n * 使用方式：\n * 1. ES6 模块：import SmartIframe from 'smart-iframe-sdk'\n * 2. CommonJS：const SmartIframe = require('smart-iframe-sdk')\n * 3. 全局变量：<script src=\"smart-iframe.min.js\"></script>\n * 4. Web Components：<smart-iframe src=\"https://example.com\"></smart-iframe>\n */\n\nimport SmartIframe from './core/SmartIframe.js';\nimport ResourceCache from './core/ResourceCache.js';\nimport Renderer from './core/Renderer.js';\nimport HtmlParser from './utils/htmlParser.js';\nimport SmartIframeElement from './web-components/SmartIframeElement.js';\n\n/**\n * 版本信息\n */\nconst VERSION = '1.0.0';\n\n/**\n * 快速创建SmartIframe实例的工厂函数\n * @param {string|Element} container - 容器选择器或元素\n * @param {Object} options - 配置选项\n * @returns {SmartIframe} SmartIframe实例\n */\nfunction create(container, options = {}) {\n  return new SmartIframe(container, options);\n}\n\n/**\n * 快速加载网页到指定容器\n * @param {string|Element} container - 容器选择器或元素\n * @param {string} url - 要加载的URL\n * @param {Object} options - 配置选项\n * @returns {Promise<SmartIframe>} SmartIframe实例\n */\nasync function load(container, url, options = {}) {\n  const iframe = new SmartIframe(container, options);\n  await iframe.load(url);\n  return iframe;\n}\n\n/**\n * 注册自定义元素到全局\n * 调用后可以在HTML中使用 <smart-iframe> 标签\n */\nfunction registerWebComponent() {\n  if (typeof window !== 'undefined' && window.customElements) {\n    // SmartIframeElement 会自动注册，这里只是确保\n    console.log('[SmartIframe] Web Component 已注册');\n  } else {\n    console.warn('[SmartIframe] 当前环境不支持 Web Components');\n  }\n}\n\n/**\n * 获取SDK信息\n * @returns {Object} SDK信息\n */\nfunction getInfo() {\n  return {\n    name: 'smart-iframe-sdk',\n    version: VERSION,\n    description: '智能iframe替代方案，解决资源重复加载问题',\n    author: 'Smart-Iframe Team',\n    license: 'MIT',\n    cacheStats: ResourceCache.getCacheStats()\n  };\n}\n\n/**\n * 清除所有缓存\n */\nfunction clearCache() {\n  ResourceCache.clearCache();\n  console.log('[SmartIframe] 已清除所有缓存');\n}\n\n/**\n * 设置全局配置\n * @param {Object} config - 全局配置\n */\nfunction setGlobalConfig(config = {}) {\n  if (config.maxCacheSize) {\n    ResourceCache.maxCacheSize = config.maxCacheSize;\n  }\n  \n  if (config.maxAge) {\n    ResourceCache.maxAge = config.maxAge;\n  }\n  \n  console.log('[SmartIframe] 全局配置已更新:', config);\n}\n\n/**\n * 批量预加载URL列表\n * @param {Array<string>} urls - URL列表\n * @returns {Promise<Array>} 预加载结果\n */\nasync function preload(urls) {\n  if (!Array.isArray(urls)) {\n    throw new Error('[SmartIframe] preload 参数必须是数组');\n  }\n  \n  console.log(`[SmartIframe] 开始批量预加载 ${urls.length} 个URL`);\n  return await ResourceCache.preloadResources(urls);\n}\n\n/**\n * 检查浏览器兼容性\n * @returns {Object} 兼容性检查结果\n */\nfunction checkCompatibility() {\n  const isSupported = {\n    shadowDOM: !!Element.prototype.attachShadow,\n    webComponents: typeof customElements !== 'undefined',\n    fetch: typeof fetch !== 'undefined',\n    proxy: typeof Proxy !== 'undefined',\n    asyncAwait: true, // 如果代码能执行到这里就支持\n    es6Classes: true,  // 如果代码能执行到这里就支持\n    es6Modules: true   // 简化检测，如果能导入就支持\n  };\n  \n  const allSupported = Object.values(isSupported).every(Boolean);\n  \n  return {\n    supported: allSupported,\n    features: isSupported,\n    recommendation: allSupported \n      ? '✅ 浏览器完全兼容SmartIframe SDK' \n      : '⚠️ 部分功能可能不可用，建议使用现代浏览器'\n  };\n}\n\n// 默认导出主类\nexport default SmartIframe;\n\n// 命名导出所有API\nexport {\n  SmartIframe,\n  ResourceCache,\n  Renderer,\n  HtmlParser,\n  SmartIframeElement,\n  VERSION,\n  create,\n  load,\n  registerWebComponent,\n  getInfo,\n  clearCache,\n  setGlobalConfig,\n  preload,\n  checkCompatibility\n};\n\n// 如果在浏览器环境中，自动注册到全局\nif (typeof window !== 'undefined') {\n  // 注册到全局对象\n  window.SmartIframe = SmartIframe;\n  window.SmartIframeSDK = {\n    SmartIframe,\n    create,\n    load,\n    registerWebComponent,\n    getInfo,\n    clearCache,\n    setGlobalConfig,\n    preload,\n    checkCompatibility,\n    version: VERSION\n  };\n  \n  // 自动注册Web Component\n  registerWebComponent();\n  \n  console.log(`[SmartIframe] SDK v${VERSION} 已加载`);\n  console.log('[SmartIframe] 兼容性检查:', checkCompatibility());\n}\n\n// 如果是CommonJS环境\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = SmartIframe;\n  module.exports.default = SmartIframe;\n  module.exports.create = create;\n  module.exports.load = load;\n  module.exports.getInfo = getInfo;\n  module.exports.clearCache = clearCache;\n  module.exports.setGlobalConfig = setGlobalConfig;\n  module.exports.preload = preload;\n  module.exports.checkCompatibility = checkCompatibility;\n  module.exports.version = VERSION;\n} "],"names":["ResourceCache","_classCallCheck","_createClass","key","value","_fetchWithCache","_asyncToGenerator","_regenerator","m","_callee","url","options","normalizedUrl","cached","requestPromise","result","_args","arguments","_t","w","_context","n","length","undefined","normalizeUrl","cache","has","get","Date","now","timestamp","maxAge","console","log","concat","a","delete","pendingRequests","v","performRequest","set","p","addToCache","fetchWithCache","_x","apply","_performRequest","_callee2","response","contentType","content","blob","_t2","_context2","fetch","_objectSpread","mode","ok","Error","status","statusText","headers","includes","text","URL","createObjectURL","size","error","_x2","_x3","urlObj","window","location","href","hash","toString","warn","data","maxCacheSize","oldestKey","keys","next","clearCache","clear","getCacheStats","totalSize","Array","from","values","reduce","sum","item","count","maxSize","_preloadResources","_callee3","urls","_this","promises","results","successCount","_context3","map","catch","Promise","all","filter","r","preloadResources","_x4","_defineProperty","Map","HtmlParser","parseHTML","html","baseUrl","parser","DOMParser","doc","parseFromString","resources","stylesheets","scripts","images","links","other","extractStylesheets","extractScripts","extractImages","extractOtherLinks","extractInlineStyleUrls","document","allUrls","getAllUrls","querySelectorAll","forEach","link","getAttribute","absoluteUrl","resolveUrl","push","element","originalUrl","type","styleTags","style","textContent","importMatches","match","urlMatch","parentStyle","_this2","script","src","async","hasAttribute","defer","module","_this3","img","srcset","srcsetUrls","parseSrcset","elementsWithBg","el","bgUrls","extractBackgroundUrls","_this4","rel","otherElements","tagName","toLowerCase","_this5","elementsWithStyle","extractUrlsFromCSS","cssContent","urlRegex","exec","styleContent","_this6","entries","split","entry","trimmed","trim","parts","startsWith","base","resolved","Object","resourceList","resource","rewriteResourceReferences","resourceMap","_this7","setAttribute","replace","newUrl","documentElement","outerHTML","Renderer","container","sandbox","loadImages","loadScripts","loadStyles","shadowRoot","isRendered","_renderUrl","htmlResource","parsed","createShadowRoot","processStyles","renderHTML","processScripts","processImages","dispatchEvent","renderUrl","innerHTML","attachShadow","delegatesFocus","resetStyle","createElement","appendChild","filteredUrls","_processStyles","_iterator","_step","stylesheet","cssResource","processedCSS","_cssResource","_processedCSS","_t3","_createForOfIteratorHelper","s","done","processCSSContent","RegExp","e","f","_processCSSContent","_callee4","urlList","_i","_urls","urlInfo","_t4","_context4","u","btoa","_x5","body","processImageElements","_ref","_callee5","_t5","_context5","_x6","_processScripts","_callee6","_iterator2","_step2","jsResource","_t6","_t7","_context6","executeScriptInSandbox","_x7","scriptContent","scriptUrl","setTimeout","setInterval","clearTimeout","clearInterval","Proxy","target","prop","allowedProps","func","Function","eventName","detail","event","CustomEvent","bubbles","cancelable","destroy","getStats","resourceCount","cacheStats","SmartIframe","resolveContainer","width","height","renderer","isLoading","isLoaded","init","querySelector","Element","setupContainer","setupEventListeners","assign","border","overflow","display","classList","add","addEventListener","_load","showLoadingState","hideLoadingState","showErrorState","load","loadingElement","remove","message","_reload","reload","_src","removeAttribute","loading","loaded","create","clearAllCache","SmartIframeElement","_HTMLElement","_callSuper","smartIframe","isConnected","_inherits","connectedCallback","render","disconnectedCallback","attributeChangedCallback","name","oldValue","newValue","_wrapNativeSuper","HTMLElement","customElements","define","VERSION","iframe","registerWebComponent","getInfo","version","description","author","license","setGlobalConfig","config","preload","_preload","isArray","checkCompatibility","isSupported","shadowDOM","prototype","webComponents","proxy","asyncAwait","es6Classes","es6Modules","allSupported","every","Boolean","supported","features","recommendation","SmartIframeSDK","exports","default"],"mappings":"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"}